!#######################################################################################################################
!#
!#  STEADY STATE CALCULATION
!#
!#######################################################################################################################
!=======================================================================================================================
! PRESSURIZER LEVEL REGULATION
!=======================================================================================================================
  !=====================================================================================================================
  ! PRESSURIZER LEVEL SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'NCO_PZR' value (nco_pzr) END
  !=====================================================================================================================
  !  CVCS CHARGING LINE SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'QMINCRCV' value (qmincrcv) END
  STRU SENSOR NAME 'QMAXCRCV' value (qmaxcrcv) END
  !=====================================================================================================================
  !  CVCS LETDOWN LINE SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'QMINDRCV' value (qmindrcv) END
  STRU SENSOR NAME 'QMAXDRCV' value (qmaxdrcv) END
!=======================================================================================================================
! PRESSURIZER PRESSURE REGULATION
!=======================================================================================================================
  !=====================================================================================================================
  ! HEATERS PRESSURE SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'PCCHAUFF' value 0.         END
  !=====================================================================================================================
  ! PRESSURIZER SPRAY FLOW  SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'QMINASP'  value (qminasp) END
  STRU SENSOR NAME 'QMAXASP'  value (qmaxasp)  END
  !=====================================================================================================================
  ! PRESSURIZER SPRAY  PRESSURE SETPOINT
  !=====================================================================================================================
  STRU SENSOR NAME 'P1ASP' value (p1asp) END
  STRU SENSOR NAME 'P2ASP' value (p2asp) END
  !=====================================================================================================================
  ! PRESSURIZER PRESSURIZER SPRAY
  !=====================================================================================================================
   STRU SENSOR NAME 'TL_ASP_N' value 530. END
!=======================================================================================================================
! STEAM GENERATOR PARAMETER
!=======================================================================================================================
   !====================================================================================================================
   != LIQUID MASS SETPOINT  SG[kg]
   !====================================================================================================================
   (i=0)
   #do
     (i=i+1)
      #if(i>nloop) #exit
      STRU SENSOR NAME (WORD('MLC_GV'//CHAR(i))) value (mlcgv) END
   !====================================================================================================================
   != SG NARROW LEVEL SETPOINT
   !====================================================================================================================
      STRU SENSOR NAME (WORD('NGECGV'//CHAR(i))) value (ngecgv)  END
   !====================================================================================================================
   != SG LARGE LEVEL SETPOINT
   !====================================================================================================================
      STRU SENSOR NAME (WORD('NGLCGV'//CHAR(i))) value (nglcgv)  END
   #enddo
   !====================================================================================================================
   != RECIRCULATION RATE PARAMETER
   !====================================================================================================================
   STRU SENSOR NAME 'KRECIR' value (krecir) END
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! STEADY STATE CALCULATION : PRIMARY CIRCUIT
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!=======================================================================================================================
!   PRIMARY LVL_CORE REGULATION
!=======================================================================================================================
STRU REGU NAME 'C0NCUVE'
   T0 (time_beg) TEND -10. TYPE 'STEADY' SUB_TYPE 3 EPS 1.D-2 PROP -1.D1
   STRU EXPE VALUE 110.  END
   STRU RESP NAME 'value'  PATH "BASE: 'SENSOR' 'LVL_CORE'" END
   STRU PARA NAME 'value'  PATH "BASE: 'SENSOR' 'C04NCUVE'"  VMIN 0. VMAX 400000. END
END
!=======================================================================================================================
!   PRIMARY FLOWRATE REGULATION
!=======================================================================================================================
STRU REGU NAME 'DEBPRI'
   T0 (time_beg) TEND -1000. TYPE 'STEADY' SUB_TYPE 3 EPS 2.D-1 PROP 1.D-3
   STRU EXPE VALUE (qdebpri)  END
   STRU RESP NAME 'value'  PATH "BASE: 'SENSOR' 'Q_DC'" END
   STRU PARA NAME 'k_eR' PATH "BASE:'VESSEL' 1:'CHANNEL' 'downcome':'PRESLOSS'"  VMIN 0. VMAX 1.D10 END
END
!=======================================================================================================================
!  CORE BYPASS FLOWRATE REGULATION
!=======================================================================================================================
STRU REGU NAME 'DEBBYP' T0 (time_beg+500.) TEND -1000. TYPE 'STEADY' SUB_TYPE 3  EPS 1.D0 PROP -4.D-2
   STRU EXPE VALUE (qdebbyb) END
   STRU RESP NAME 'value' PATH "BASE:'SENSOR' 'Q_BYP'" END
   STRU PARA NAME 'k_e' PATH "BASE:'VESSEL' 1:'CHANNEL' 'bypass':'PRESLOSS'" VMIN 0. VMAX 1.D10 END
END
!=======================================================================================================================
!  UPHEAD FLOWRATE REGULATION
!=======================================================================================================================
STRU REGU NAME 'DEBDOME' T0 (time_beg+200.) TEND -1000. TYPE 'STEADY' SUB_TYPE 3  EPS 1.D0 PROP -1.D-2
   STRU EXPE VALUE (qdebdom) END
   STRU RESP PATH "BASE : 'PRIMARY': 'JUNCTION' 'VDOUPH': 'THER'" NAME 'q_m_liq' END
   STRU PARA PATH "BASE : 'PRIMARY' : 'JUNCTION' 'UPHTGU' : 'GEOM'" NAME 'k_e' VMIN 0. VMAX 1.D10 END
END
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! STEADY STATE CALCULATION :  SECONDARY CIRCUIT
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   (i=0)
   #do
     (i=i+1)
      #if(i>nloop) #exit
!=======================================================================================================================
!= SECONDARY SG MASS  REGULATION
!=======================================================================================================================
      STRU REGU NAME (WORD('LIQ'//CHAR(i))) T0 (time_beg+200.) TEND -1000.0 TYPE 'STEADY' SUB_TYPE 0 EPS 5.D0 PROP 0.0001
         FILT 1. DERI 0.01 INTE 0.
         STRU EXPE PATH ("BASE:SENSOR(MLC_GV"//CHAR(i)//")") NAME 'value' END
         STRU RESP PATH ("BASE:SENSOR(ML_GV"//CHAR(i)//")") NAME 'value' END
         STRU PARA PATH ("BASE:SYSTEMS:PUMP("//CHAR(sgrpname:i)//")")  NAME 'FLOW' VMIN -100. VMAX 100. END
      END
   #enddo
!=======================================================================================================================
! OPENING OF CONNECTI FOR STEADY STATE REGULATION
!=======================================================================================================================
STRU EVENT TYPE 'ONCE' COND "(TIME < 0.)"
   STRU ACTI TITL "A: Opening of pzr pressure regulation"
      PATH "BASE : 'SYSTEMS' 1 : 'PRESSURI' 'REG_PRES'" VAR  'STAT' VALU 'ON'
   END
   STRU ACTI PATH "BASE:CONNECTI(ASPCL1)" VAR  'STAT' VALU 'ON' END
   STRU ACTI PATH "BASE:CONNECTI(ASPCL2)" VAR  'STAT' VALU 'ON' END
   (i=0)
   #do
     (i=i+1)
      #if(i>nloop) #exit
      STRU ACTI TITL ("A: Opening of level regulation SG"//CHAR(i))
         PATH ("BASE:CONNECTI("//CHAR(sgrename:i)//")") VAR  'STAT' VALU 'ON'
      END
   #enddo
END
!=======================================================================================================================
! END OF STEADY STATE CALCULATION
!=======================================================================================================================
STRU EVENT TYPE 'ONCE' COND "(TIME > -1000.0)"
   STRU ACTI
      PATH "BASE : 'PRIMARY' : 'JUNCTION' 'UPHTGU' : 'GEOM'"  VAR 'k_eR'
      INST "BASE : 'PRIMARY' : 'JUNCTION' 'UPHTGU' : 'GEOM':'k_e'"
   END
   STRU ACTI
      PATH "BASE:'VESSEL' 1:'CHANNEL' 'downcome':'PRESLOSS'"  VAR 'k_e'
      INST "BASE:'VESSEL' 1:'CHANNEL' 'downcome':'PRESLOSS':'k_eR'"
   END
   STRU ACTI
      PATH "BASE:'VESSEL' 1:'CHANNEL' 'bypass':'PRESLOSS' " VAR 'k_eR'
      INST "BASE:'VESSEL' 1:'CHANNEL' 'bypass':'PRESLOSS' : 'k_e'"
   END
   (i=0)
   #do
     (i=i+1)
      #if(i>nloop) #exit
      STRU ACTI TITL ("A: closing of level regulation SG"//CHAR(i))
         PATH ("BASE:CONNECTI("//CHAR(sgrename:i)//")") VAR  'STAT' VALU 'OFF'
      END
   #enddo
END
STRU EVENT TYPE 'ONCE' COND "(TIME > -100.0)"
   (i=0)
   #do
     (i=i+1)
      #if(i>nloop) #exit
    STRU ACTI
      PATH ("BASE: 'SENSOR' 'NGECGV"//CHAR(i)//"'")  VAR 'value'
      INST ("BASE:'SENSOR' 'NR_SG"//CHAR(i)//"':'value'")
    END
   #enddo
END
!#######################################################################################################################
!#
!#  TRANSIENT CALCULATION
!#
!#######################################################################################################################
!***********************************************************************************************************************
! TIME STEP REGULATION
!***********************************************************************************************************************
STRU SENSOR NAME 'STEP' value 10. END
!=======================================================================================================================
!= CALCULATION STOP
!=     A_CALC = 0. : NO STOP ORDER OF CALCULATION
!=     A_CALC = 1. : STOP ORDER OF CALCULATION
!=======================================================================================================================
STRU SENSOR NAME 'A_CALC' value 0. END
!***********************************************************************************************************************
! PRIMARY
!***********************************************************************************************************************
!=======================================================================================================================
!= DEPRESSURISATION SPEED (stable if dP_dt < 1.D-3 bar)
!=======================================================================================================================
STRU SENSOR NAME 'dP_dt' value 0. END
!=======================================================================================================================
!= COOLING SPEED (stable if dTr_dt < 1.5D-3)
!=======================================================================================================================
STRU SENSOR NAME 'dTr_dt' value 0. END
!=======================================================================================================================
!= Pressurizer Level Stabilization (stable if dNP_dt < 0.01)
!=======================================================================================================================
STRU SENSOR NAME 'dNP_dt' value 0. END
!=======================================================================================================================
! SG DEPRESSURISATION SPEED
!=======================================================================================================================
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   STRU SENSOR NAME (WORD('dP_dtSG'//CHAR(i))) value 0. END
   STRU SENSOR NAME (WORD('P0_GV'//CHAR(i))) value 0. END
#enddo
!=======================================================================================================================
! CONTROLED COOLING
!=======================================================================================================================
STRU SENSOR NAME 'COEF_REF' value 0. END
STRU SENSOR NAME 'T0_REF'   value 0. END
STRU SENSOR NAME 'T00_REF'  value 0. END
STRU SENSOR NAME 'TRIC_T0'  value 0. END
STRU SENSOR NAME 'TMOY_T0'  value 0. END
STRU SENSOR NAME 'P_PRIM0'  value 0. END
STRU SENSOR NAME 'N_PRESS0' value 0. END
STRU SENSOR NAME 'T_R2A0'   value 0. END
STRU SENSOR NAME 'T_R2B0'   value 0. END
STRU EVENT COND "( TIME > T0_REF )"
   STRU ACTI
      #begin INST
         eps = 1.D-9
         DT00 = MAX (eps,TIME-T00_REF)
         dTr_dt   <- (TRIC-TRIC_T0)/DT00
         dTm_dt   <- (T_MEAN-TMOY_T0)/DT00
         COEF_REF <- (TRIC-TRIC_T0)/DT00* 3600.
         dP_dt    <- (P_PRIM-P_PRIM0)/DT00
         dNP_dt   <- (LVL_PZR-N_PRESS0)/DT00
         TRIC_T0  <- TRIC
         TMOY_T0  <- T_MEAN
         P_PRIM0  <- P_PRIM
         N_PRESS0 <- LVL_PZR
         T00_REF  <- TIME
         T0_REF   <- T0_REF + 10.
         nloop = BASE:'DESIGN' : 'RCS':'nloop'
         DO i 1 nloop
            g  = WORD('P_SG'//CHAR(i))
            pgv = BASE:'SENSOR' g: 'value'
            g = WORD('P0_GV'//CHAR(i))
            p0gv = BASE:'SENSOR' g: 'value'
            dpgv  = WORD('dP_dtSG'//CHAR(i))
            pgv = BASE:'SENSOR' g: 'value'
            ROOTBASE(dpgv) <- (pgv-p0gv)/DT00
         ENDDO
         DELETE DT00
         DELETE eps
         DELETE p0gv
         DELETE pgv
         DELETE dpgv
         DELETE g
      #end
   END
END
!=======================================================================================================================
! PERMISSIVE
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   !  P4 : SCRAM report
   !     P4 = 0. : no SCRAM
   !     P4 = 1. : SCRAM
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P4' value 0. END
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   !  P7 : P10 or P13
   !      P7 = 0. : if P10 = 0. and P13 = 0.
   !      P7 = 1. : if P10 = 1. or P13 = 1.
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P7' value 0. END
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   !  P10 : Power
   !     P10 = 0. : Power < 10% NP
   !     P10 = 1. : Power > 10% NP
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P10' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  P11 : Low pressurizer pressure
   !     P11 = 0. : P > Ppzrp11 bar
   !     P11 = 1. : P < Ppzrp11 bar
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P11' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  BM_P11 : blocking SI signal below P11
   !     BM_P11 = 0. : SI signal below P11
   !     BM_P11 = 1. : no SI signal below P11
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'BM_P11' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  P12 : Low loop temperature
   !     P12 = 0. : Tmoy > Tmoyp12
   !     P12 = 1. : Tmoy < Tmoyp12
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P12' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  BM_P12 : Blocking SI signal below P12
   !     BM_P12 = 0. : SI signal below P12
   !     BM_P12 = 1. : no SI signal below P12
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'BM_P12' value 0. END
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   !  P13 : high turbine pressure
   !     P13 = 0. : P < Pgre
   !     P13 = 1. : P > Pgre
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P13' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !=  P15 : P4 or P10
   !=     P15 = 0. : Power < 10% NP and P4 = 0.
   !=     P15 = 1. : Power > 10% NP or P4 = 1.
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P15' value 0. END
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   ! NOMINAL POWER (PERMISIVE CALCULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PNOM100' value (pnom100) END
   !--------------------------------------------------------------------------------------------------------------------
   ! P12  LOW TMOY (PERMISIVE CALCULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TMOYP12' value (tmoyp12) END
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW TMOY
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TMOYMIN1' value (tmoymin1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW COLD LEG TEMPERATURE (MIN1)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TCLMIN1' value (tclmin1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW COLD LEG TEMPERATURE (MIN2)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TCLMIN2' value (tclmin2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! P11 LOW PZR PRESSURE  (PERMISIVE CALCULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRP11' value (ppzrp11) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX3 PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRMAX3' value (ppzrmax3) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN1 PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRMIN1' value (ppzrmin1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN2 PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRMIN2' value (ppzrmin2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN3 PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRMIN3' value (ppzrmin3) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN4 PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PPZRMIN4' value (ppzrmin4) END
   !--------------------------------------------------------------------------------------------------------------------
   ! HIGH PRESSURIZER LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'NPZRMAX1' value (npzrmax1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW PRESSURIZER LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'NPZRMIN1' value (npzrmin1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! PERMISSIVE CALCULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      STRU ACTI
         #begin INST
            P10 <- 0.
            P12 <- 0.
            P4  <- 0.
            Ppow = BASE : 'GENERAL' : 'POWENT'
            IF (AAR > 0.) P4 <- 1.
            IF (Ppow > (PNOM100* 10./100.)) P10 <- 1.
            IF (P_PRIM < PPZRP11 ) P11 <- 1.
            IF (T_MEAN < TMOYP12 ) P12 <- 1.
            DELETE Ppow
          #end
       END
    END
!.......................................................................................................................
  STRU EVENT COND "(TIME >= 0.)"
    STRU ACTI
       #begin INST
          P7  <- 0.
          P15 <- 0.
          Ppow = BASE : 'GENERAL' : 'POWENT'
          IF ((P10 > 0.) || (P13 > 0.)) P7 <- 1.
          IF (Ppow < (PNOM100*10./100.) || P4 == 1.) P15 <- 1.
          DELETE Ppow
        #end
     END
  END
!=======================================================================================================================
! REACTOR COOLANT PUMP
!=======================================================================================================================
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   !  REACTOR COOLANT PUMP BREAK DOWN
   !       I_GMPPi = 0.  No break down
   !       I_GMPPi = 1.  break down
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('I_GMPP'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  REACTOR COOLANT PUMP AUTOMATIC STOP ORDER
   !       A_GMPPi = 0.  No automatic stop order
   !       A_GMPPi = 1.  Automatic Stop order
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('A_GMPP'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  REACTOR COOLANT PUMP TIME OF PUMP STOP : T_GMPPi
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('T_GMPP'//CHAR(i))) value 1.D9 END
   !--------------------------------------------------------------------------------------------------------------------
   !  LOW PRIMARY PUMP SPEED BV_GMPPi
   !       BV_GMPPi = 0.  RCP Speed ok
   !       BV_GMPPi = 1.  Low RCP speed V<  VN (MIN1)
   !       BV_GMPPi = 2.  Low RCP speed V<  VN (MIN2)
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('BV_GMPP'//CHAR(i))) value 0. END
   #enddo
   STRU SENSOR NAME 'GMPP' value (FLOAT(nloop))  END
   !--------------------------------------------------------------------------------------------------------------------
   ! RCP NOMINAL VELOCITY
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'VNOMGMPP' value (vnomgmpp) END
   STRU SENSOR NAME 'VM1GMPP'  value (vm1gmpp) END
   STRU SENSOR NAME 'VM2GMPP'  value (vm2gmpp) END
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            min1 = VM1GMPP * VNOMGMPP
            min2 = VM2GMPP * VNOMGMPP
            DO i 1 nloop
               pumpname = WORD('RCP00'//CHAR(i)//'PO')
               v   = BASE : 'SYSTEMS' 1 : 'PUMP' pumpname : 'MOMENTUM' 1 : 'OMEGA' 1
               bv  = WORD('BV_GMPP'//CHAR(i))
               ROOTBASE(bv) <- 0.
               IF (v < min1) ROOTBASE(bv) <- 1.
               IF (v < min2) ROOTBASE(bv) <- 2.
            ENDDO
            DELETE nloop
            DELETE min1
            DELETE min2
            DELETE v
            DELETE bv
            DELETE pumpname
            DELETE i
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   !  REACTOR COOLANT PUMP STOP
   !--------------------------------------------------------------------------------------------------------------------
   (i=0)
      #do
         (i=i+1)
         #if(i>nloop) #exit
         STRU EVENT TYPE 'ONCE' COND ( "((A_GMPP"//CHAR(i)//" == 1.) || (I_GMPP"//CHAR(i)//" == 1.))" )
            STRU ACTI
               TITL ("A: STOP OF PRIMARY PUMP LOOP "//CHAR(i))
               PATH ("BASE:SYSTEMS:PUMP(RCP00"//CHAR(i)//"PO)")
               VAR 'CM'
               VALU 0.0
            END
            STRU ACTI PATH ("BASE:SENSOR (T_GMPP"//CHAR(i)//")")  VAR  'value'  INST "TIME" END
         END
      #enddo
   !--------------------------------------------------------------------------------------------------------------------
   !  REACTOR COOLANT PUMP OPERATING FLAG
   !       GMPPi = 0. Primary pump off
   !       GMPPi = 1. Primary pump on
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            gmp  = 0.
            DO i 1 nloop
               gm = 1.
               pumpname = WORD('RCP00'//CHAR(i)//'PO')
               g  = WORD('GMPP'//CHAR(i))
               cm = BASE : 'SYSTEMS' : 'PUMP' pumpname : 'CM'
               IF (cm == 0.0) gm = 0.
               ROOTBASE(g) <- gm
               gmp = gmp + gm
            ENDDO
            GMPP <- gmp
            DELETE nloop
            DELETE gmp
            DELETE gm
            DELETE g
            DELETE cm
            DELETE pumpname
            DELETE i
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   !    PRIMARY PUMP STOP ORDER ON HIGH CONTAINMENT PRESSURE MAX2 AND LOW PRESSURIZER PRESSURE MIN4
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT  TYPE 'ONCE'   COND "(P_CONT > PC_MAX2) && (P_PRIM < PPZRMIN4)"
     (i=0)
      #do
         (i=i+1)
         #if(i>nloop) #exit
            STRU ACTI
               TITL ("A: HIGH CONTAINMENT PRESSURE MAX2 AND LOW PZR PRESSURE MIN4 STOP OF PRIMARY PUMP LOOP "//CHAR(i))
               PATH ("BASE:SENSOR (A_GMPP"//CHAR(i)//")")  VAR  'value' VALU 1.
            END
      #enddo
   END
!=======================================================================================================================
!  ATWT SIGNAL
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   !  FLAG ATWT
   !       ATWT = 0 no ATWT signal
   !       ATWT = 1 ATWT signal
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ATWT' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  ATWT SIGNAL LOW FLOWRATE MFWS AND HIGH DT LOOP
   !        QL_MFW < MIN1 QnARE
   !        DT_BOUCLE > MAX1 DT
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'MAXDTBCL' value (maxdtbcl) END
   STRU EVENT TYPE 'ONCE' COND "((DT_BL > MAXDTBCL) && (BQ_ARE >= 1.))"
      STRU ACTI  SENSOR ATWT TITL "A: ATWT SIGNAL LOW FLOWRATE MFWS HIGH DT LOOP" INST "ATWT <- 1." END
   END
!.......................................................................................................................
!=======================================================================================================================
!= REACTOR TRIP
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! REACTOR TRIP
   !       AAR = 0 No reactor trip order
   !       AAR = 1 Reactor trip order
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'AAR' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! REACTOR TRIP DELAY
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DT_AAR' value (dt_aar) END
   STRU SENSOR NAME 'DTAARNPZ' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! REACTOR TRIP TIME
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_AAR' value 1.D9 END
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON HIGH PRESSURIZER PRESSURE MAX3
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND "(P_PRIM > PPZRMAX3 )"
         STRU ACTI SENSOR AAR TITL "A: REACTOR TRIP ACTUATION ON HIGH PZR PRESSURE MAX3 (FST)" INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON VERY LOW STEAM GENERATOR  LEVEL (NR_SGi<NGEMIN2)
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND ("(NR_SG"//CHAR(i)//" < NGEMIN2) && (TIME > 0.)")
         STRU ACTI SENSOR AAR TITL ("A: REACTOR TRIP ACTUATION ON VERY LOW LEVEL SG"//CHAR(i)//" (FST)") INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
   #enddo
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON SIS ACTUATION
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND "IS_A == 1."
         STRU ACTI SENSOR AAR TITL "A: REACTOR TRIP ACTUATION ON SIS ACTUATION" INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
!.......................................................................................................................
    STRU EVENT COND "P7 == 1."
!.......................................................................................................................
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON HIGH PRESSURIZER LEVEL
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND "LVL_PZR > NPZRMAX1"
         STRU ACTI SENSOR AAR TITL "A:REACTOR TRIP ACTUATION ON HIGH PRESSURIZER LEVEL (FST)" INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON LOW PRESSURIZER PRESSURE
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND "P_PRIM < PPZRMIN3"
         STRU ACTI SENSOR AAR TITL "A: REACTOR TRIP ACTUATION ON LOW PRESSURIZER PRESSURE (FST)" INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON VERY HIGH STEAM GENERATOR   (NR_SGi>NGEMAX2)
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND ("(NR_SG"//CHAR(i)//" > NGEMAX2)")
         STRU ACTI SENSOR AAR TITL ("A: REACTOR TRIP ACTUATION ON VERY HIGH LEVEL SG"//CHAR(i)//" (FST)") INST "AAR <- 1." END
         STRU ACTI INST "STEP <- 0.1" END
      END
   #enddo
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop-1) #exit
      (j=i)
      #do
         (j=j+1)
         #if(j>nloop) #exit
      !-----------------------------------------------------------------------------------------------------------------
      ! REACTOR TRIP ACTUATION ON LOW PRIMARY PUMP SPEED (LOOP i AND LOOP j)
      !-----------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE' COND ("(BV_GMPP"//CHAR(i)//" == 2. ) && (BV_GMPP"//CHAR(j)//"== 2.)")
         STRU ACTI SENSOR AAR TITL ("A: REACTOR TRIP ACTUATION ON LOW PRIMARY PUMP SPEED LOOP "//CHAR(i)//","//CHAR(j)//" (FST)")
            INST "AAR <- 1."
         END
         STRU ACTI INST "STEP <- 0.1" END
      END
      #enddo
   #enddo
!.......................................................................................................................
  END
!.......................................................................................................................
!.......................................................................................................................
    !-----------------------------------------------------------------------------------------------------------------
    !  REACTOR TRIP ACTUATION ON ATWT SIGNAL
    !-----------------------------------------------------------------------------------------------------------------
    STRU EVENT TYPE 'ONCE' COND "(ATWT == 1.)"
       STRU ACTI SENSOR AAR TITL "A: REACTOR TRIP ACTUATION ON ATWT SIGNAL (FST)" INST "AAR <- 1." END
       STRU ACTI INST "STEP <- 0.1" END
    END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! REACTOR TRIP TIME
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "AAR == 1."
      STRU ACTI   INST "T_AAR <- TIME + DT_AAR" END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! SCRAM
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "((AAR == 1.) && (TIME > T_AAR ))"
      STRU ACTI TITL "A: SCRAM (FST)" PATH "BASE:SEQUENCE" VAR 'TSCRAM' INST "BASE:'SEQUENCE':'TIME'" END
      STRU ACTI INST "P4 <- 1." END
   END
   STRU EVENT TYPE 'ONCE' COND "((AAR == 1.) && (TIME > T_AAR + DTAARNPZ ))"
      STRU ACTI SENSOR NCO_PZR TITL "A: PZR LEVEL SET POINT " INST "NCO_PZR <- 20." END
   END
!=======================================================================================================================
! CVCS LETDOWN LINE FOR STEADY STATE
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS LETDOWN LINE AVAILABILITY
   !      I_DRCV = 0.   Available
   !      I_DRCV = 100. Unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_DRCV' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS LETDOWN LINE FLOW IN MANUAL MODE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QDRCVMAN' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS LETDOWN LINE MAXIMUM FLOWRATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PODDRCV'  value 25.D5 END
   STRU SENSOR NAME 'SODDRCV'  value 3.1D-5 END
   STRU SENSOR NAME 'NODDRCV'  value 3. END
   STRU SENSOR NAME 'QMODDRCV' value 10. END
!-----------------------------------------------------------------------------------------------------------------------
! CVCS LETDOWN LINE AVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT COND "(I_DRCV == 0.)"
   !--------------------------------------------------------------------------------------------------------------------
   ! MAXIMUM FLOWRATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU ACTI
      #begin INST
         QMOD = 0.
         IF (P_PRIM > PODDRCV) QMOD = -1.* NODDRCV * SODDRCV * SQRT(2000.*(P_PRIM-PODDRCV))
         IF (PODDRCV >= P_PRIM ) QMOD = 0.
         QMOD = MAX(QMOD,QMAXDRCV)
         QMODDRCV <- QMOD
         DELETE QMOD
      #end
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS LETDOWN LINE AUTOMATIC MODE 100% PN
   !--------------------------------------------------------------------------------------------------------------------
   STRU ACTI PATH "BASE:SYSTEMS:PUMP(D_RCV)" VAR  'FLOW' VALU  (qdrcvnom) END
END
STRU EVENT COND "(I_DRCV == 0.) && (TIME > 0.)"
   STRU ACTI SENSOR 'I_DRCV' INST "I_DRCV = 100." TITL "I: CVCS LETDOWN LINE IS LOST" END
END
!-----------------------------------------------------------------------------------------------------------------------
! CVCS LETDOWN LINE UNAVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE 'ONCE' COND "( I_DRCV == 100.)"
   STRU ACTI TITL "A: CVCS LETDOWN LINE UNAVAILABLE" PATH "BASE:CONNECTI(DE_RCV)" VAR  'STAT' VALU 'OFF' END
   STRU ACTI PATH "BASE:SYSTEMS:PUMP(D_RCV)" VAR  'FLOW' VALU  0.0 END
END
!=======================================================================================================================
!= CVCS CHARGING LINE FOR STEADY STATE
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS CHARGING LINE AVAILABILITY
   !      I_CRCV = 0.   Available
   !      I_CRCV = 100. Unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_CRCV' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS CHARGING LINE FLOW IN MANUAL MODE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QCRCVMAN' value 0. END
!-----------------------------------------------------------------------------------------------------------------------
! CVCS CHARGING LINE AVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT COND "(I_CRCV == 0.)"
   !--------------------------------------------------------------------------------------------------------------------
   ! CVCS CHARGING LINE AUTOMATIC MODE (PRESSURIZER LEVEL REGULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU ACTI
      #begin INST
         vol      = BASE : 'PRIMARY' : 'VOLUME' 'PZR'
         volTHER  = vol  : 'THER'
         volGEOM  = vol  : 'GEOM'
         S_PZR = volGEOM : 'S_interf'
         HG = BASE:'DESIGN' : 'RCS':'lgspzr'
         G = 0.001
         Q1 = S_PZR * RHOL_PZR * (NCO_PZR-LVL_PZR) * ( G * HG)
         QC = Q1 - Q_DRCV
         IF (QC <QMINCRCV) QC = QMINCRCV
         IF (QC >QMAXCRCV) QC = QMAXCRCV
         pump = BASE : 'SYSTEMS' 1 : 'PUMP' 'C_RCV'
         pump('FLOW',1) <- QC
         DELETE vol
         DELETE volTHER
         DELETE volGEOM
         DELETE S_PZR
         DELETE HG
         DELETE G
         DELETE Q1
         DELETE QC
         DELETE pump
      #end
   END
END
STRU EVENT COND "(I_CRCV == 0.) && (TIME > 0.)"
   STRU ACTI SENSOR 'I_CRCV' INST "I_CRCV = 100." TITL "CVCS CHARGING LINE IS LOST" END
END
!-----------------------------------------------------------------------------------------------------------------------
! CVCS CHARGING LINE UNAVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE 'ONCE' COND "( I_CRCV == 100.)"
   STRU ACTI TITL "A: CVCS CHARGING LINE (CVC TANK) UNAVAILABLE" PATH "BASE:CONNECTI(CH_RCV)" VAR  'STAT' VALU 'OFF' END
   STRU ACTI PATH "BASE:SYSTEMS:PUMP(C_RCV)" VAR  'FLOW' VALU  0.0 END
END
!=======================================================================================================================
! PRESSURIZER HEATERS
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! PRESSURIZER HEATERS AVAIBILITY
   !      I_CHAUFF = 0.   Available
   !      I_CHAUFF = 100. Unavailable
   !      I_CHAUFF = 101. Temporary unavailable ( pressurizer low level protection)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_CHAUFF' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! PRESSURIZER HEATERS OPERATING FLAG
   !      CHAUFF = 0.   Automatic mode (pressurizer pressurizer regulation )
   !      CHAUFF = 99.  stoped
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'CHAUFF' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'P_STAND'
      #begin INST
         TRIC_C = BASE : 'SENSOR' 'TRIC_C' : 'value'
         PS = ((1.15587D-5 * (TRIC_C**3)) - (3.35454D-3 * (TRIC_C**2)) ^
                +  (4.12734D-1 * TRIC_C) - 1.68877D1) * 1.D5
         PS
      #end
   END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER HEATERS AVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT COND "(I_CHAUFF == 0.)"
   STRU EVENT TYPE 'ONCE' COND "(CHAUFF == 0.)"
      STRU ACTI
         #begin INST
            wchauff = BASE:'DESIGN' : 'RCS':'wchauff'
            pchauff = BASE:'DESIGN' : 'RCS':'pchauff'
            echauff = BASE:'DESIGN' : 'RCS':'echauff'
            im = NUMBER(wchauff)
            DO i 1 im
               IF (echauff:i == 1) pccha = ((pchauff:(i+1)+pchauff:i)/2.)
            ENDDO
            PCCHAUFF <- pccha
            chau = BASE:'DESIGN' : 'RCS'
            chau('dpchauff',1)  <- pchauff - pccha
         #end
      END
   END
   STRU EVENT COND "(TIME > 0.)"
      STRU ACTI
         #begin INST
            chau = BASE:'DESIGN' : 'RCS'
            dpchauff = chau : 'dpchauff'
            chau('pchauff',1)  <- dpchauff + PCCHAUFF
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! AUTOMATIC MODE (PRESSURIZER PRESSURE REGULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(CHAUFF == 0.)"
      STRU ACTI
         #begin INST
            wchauff = BASE:'DESIGN' : 'RCS':'wchauff'
            pchauff = BASE:'DESIGN' : 'RCS':'pchauff'
            echauff = BASE:'DESIGN' : 'RCS':'echauff'
            im = NUMBER(wchauff)
            IFTHEN (P_PRIM < pchauff:1)
               WW=wchauff:1
            ELSEIF(P_PRIM >= pchauff:im)
               WW=wchauff:im
            ELSE
               DO i 1 (im-1)
                  IFTHEN ((P_PRIM >= pchauff:i) && (P_PRIM < pchauff:(i+1)))
                     IFTHEN(echauff:i == 0)
                        WW=wchauff:(i+1)
                     ELSE
                        WW=((wchauff:i-wchauff:(i+1))*P_PRIM+wchauff:(i+1)*pchauff:i^
                            -wchauff:i*pchauff:(i+1))/(pchauff:i-pchauff:(i+1))
                     ENDIF
                     EXIT
                  ENDIF
               ENDDO
            ENDIF
            chau = BASE:'SYSTEMS':'PRESSURI' 'REG_PRES'
            chau('phi_heat',1) <- WW
            DELETE WW
            DELETE chau
            DELETE wchauff
            DELETE pchauff
            DELETE echauff
            DELETE i
            DELETE im
        #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! PRESSURIZER HEATERS STOP
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "( CHAUFF == 99.)"
      STRU ACTI TITL "A: PRESSURIZERS HEATERS STOP" PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'phi_heat' VALU  0. END
   END
END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER HEATERS UNAVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT  COND "( I_CHAUFF == 100.)"
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'phi_heat' VALU  0. END
   STRU ACTI SENSOR CHAUFF TITL "A: PRESSURIZERS HEATERS UNAVAILABLE" INST "CHAUFF <- 99." END
END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER HEATERS TEMPORARILY UNAVAILABLE (LOW PRESSURIZER LEVEL)
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT  COND "( I_CHAUFF == 101.)"
   STRU ACTI TITL "A: PRESSURIZER HEATERS TEMPORARILY UNAVAILABLE (LOW PRESSURIZER LEVEL)"
      PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'phi_heat' VALU  0.
   END
   STRU ACTI INST "CHAUFF <- 99." END
END
STRU EVENT COND "(LVL_PZR < NPZRMIN1) && (I_CHAUFF < 100.) && (TIME >= 0.)"
   STRU ACTI INST "I_CHAUFF <- 101." END
END
STRU EVENT COND "(LVL_PZR > NPZRMIN1) && (I_CHAUFF == 101.)"
  STRU ACTI SENSOR I_CHAUFF   TITL "A: PRESSURIZER HEATERS AVAILABLE (NPZR> NMIN)"
     #begin INST
        I_CHAUFF <- 0.
        CHAUFF <- 99.
     #end
  END
END
!=======================================================================================================================
! NORMAL PRESSURIZER SPRAY
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY AVAILABILITY
   !    I_ASP = 0.   Available
   !    I_ASP = 100. Unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_ASP' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY OPERATING FLAG
   !    ASP = 0.  : Automatic mode (pressurizer pressure regulation 100%NP)
   !    ASP = 99. : Closed
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ASP' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  TIME STEP MANAGEMENT FLOW INCREASE/DECREASE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T0_ASP' value 0. END
   STRU SENSOR NAME 'DQ_ASP' value 0.5 END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY FROM COLD LEG 1 (RCP201VP) AVAILABILITY
   !    I_ASP1 = 0     Available
   !    I_ASP1 = 100.  Unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_ASP1' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY FROM COLD LEG 2 (RCP202VP) AVAILABILITY
   !    I_ASP2 = 0     Available
   !    I_ASP2 = 100.  Unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_ASP2' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER LIQUID FLOW
   !    Q_ASP_N [kg/s]
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'Q_ASP_N'  value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY MAXIMUM LIQUID FLOW
   !    QMAXASPN [kg/s]
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QMAXASPN'  value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER FLOW MINIMUM LIQUID FLOW
   !    QMINASPN [kg/s]
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR  NAME 'QMINASPN'  value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY RHO_LIQ
   !    RHO_LIQ [kg/m3]
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'RL_ASP_N' END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY CORE DTSAT REGULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DTS1_ASP' value 50. END
   STRU SENSOR NAME 'DTS2_ASP' value 75. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY UPHEAD DTSAT REGULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DTC1_ASP' value 15. END
   STRU SENSOR NAME 'DTC2_ASP' value 20. END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY - DEPRESSURISATION SPEED bar/min
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DP_ASP' value 0.5 END
!-----------------------------------------------------------------------------------------------------------------------
! NORMAL PRESSURIZER SPRAY AVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT COND "(I_ASP == 0.)"
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY :  FLOW CALCULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU ACTI
      #begin INST
         QMINASPN <- 0.
         QMAXASPN <- 0.
         xcl1 = BASE:'DESIGN' : 'RCS':'xcl1pzrs'
         xcl2 = BASE:'DESIGN' : 'RCS':'xcl2pzrs'
         volun1 = GETVOLU BASE 'PRIMARY' 'CL1' xcl1
         volu1 = BASE:'PRIMARY' 1:'VOLUME' volun1 : 'THER'
         volun2 = GETVOLU BASE 'PRIMARY' 'CL2' xcl2
         volu2 = BASE:'PRIMARY' 1:'VOLUME' volun2 : 'THER'
         rho_BF1  = 600.
         IF (NUMBER 'rho_liq' volu1 <> 0) rho_BF1 = volu1 : 'rho_liq' : 0
         rho_BF2  = 600.
         IF (NUMBER 'rho_liq' volu2 <> 0) rho_BF2 = volu2  : 'rho_liq' : 0
         TBF1=volu1:'T_liq':0
         TBF2=volu2:'T_liq':0
         RL_ASP_N <- rho_BF1
         TL_ASP_N <- TBF1
         IF (I_ASP1 == 0.) RL_ASP_N <- rho_BF1
         IF (I_ASP2 == 0.) RL_ASP_N <- rho_BF2
         IF ((I_ASP1 == 0.) && (I_ASP2 == 0.)) RL_ASP_N <- (rho_BF1 + rho_BF2) / 2.
         IF (I_ASP1 == 0.) TL_ASP_N <- T_CL1
         IF (I_ASP2 == 0.) TL_ASP_N <- T_CL2
         IF ((I_ASP1 == 0.) && (I_ASP2 == 0.)) TL_ASP_N <- (T_CL1 + T_CL2) / 2.
         IF (I_ASP1 == 0.) QMAXASPN <- QMAXASPN + QMAXASP * RL_ASP_N / (2.*3600.)
         IF (I_ASP2 == 0.) QMAXASPN <- QMAXASPN + QMAXASP * RL_ASP_N / (2.*3600.)
         IF (I_ASP1 == 0.) QMINASPN <- QMINASPN + QMINASP * RL_ASP_N / (2.*3600.)
         IF (I_ASP2 == 0.) QMINASPN <- QMINASPN + QMINASP * RL_ASP_N / (2.*3600.)
         DELETE xcl1
         DELETE xcl2
         DELETE volun1
         DELETE volu1
         DELETE volun2
         DELETE volu2
         DELETE rho_BF1
         DELETE rho_BF2
         DELETE TBF1
         DELETE TBF2
      #end
   END
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'STAT' VALU  'ON' END
   STRU EVENT COND "(I_ASP1 == 0.)"
      STRU ACTI PATH "BASE:CONNECTI(ASPCL1)" VAR  'STAT' VALU  'ON' END
   END
   STRU EVENT COND "(I_ASP2 == 0.)"
      STRU ACTI PATH "BASE:CONNECTI(ASPCL2)" VAR  'STAT' VALU  'ON' END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY (PRESSURIZER PRESSURE REGULATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(ASP == 0.)"
      STRU ACTI
         #begin INST
            QQ = 0.
            IF (P_PRIM<P1ASP) QQ=QMINASPN
            IFTHEN ((P_PRIM>= P1ASP) AND (P_PRIM<P2ASP))
               QQ=((QMAXASPN-QMINASPN)*P_PRIM+QMINASPN*P2ASP-QMAXASPN*P1ASP)/(P2ASP-P1ASP)
            ENDIF
            IF (P_PRIM>=P2ASP) QQ=QMAXASPN
            Q_ASP_N <- QQ
            DELETE QQ
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! NORMAL PRESSURIZER SPRAY (PRIMARY PRESSURE STABILISATION)
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(ASP == 1.)"
      STRU ACTI
         #begin INST
          G = 150.
          QQ = Q_ASP_N
          IF (dP_dt > 0.) QQ = QQ + G * dP_dt
          IF (QQ < QMINASPN) QQ = QMINASPN
          IF (QQ > QMAXASPN) QQ = QMAXASPN
          Q_ASP_N <- QQ
          DELETE QQ
          DELETE G
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING NORMAL PRESSURIZER SPRAY
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(ASP == 99.)"
      STRU ACTI SENSOR Q_ASP_N   TITL "A: CLOSING NORMAL PRESSURIZER SPRAY" INST "Q_ASP_N <- 0." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   !  CLOSING NORMAL PRESSURIZER SPRAY ON LOW PRESSURIZER PRESSURE MIN3
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT  COND "(P_PRIM < PPZRMIN3) && (ASP == 0.) && (TIME >= 0.) && (BM_P11== 0.)"
      STRU ACTI SENSOR ASP TITL "A: CLOSING NORMAL PRESSURIZER SPRAY ON LOW PRESSURIZER PRESSURE "
        INST "ASP <- 99."
      END
   END
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'T_liq'   INST "TL_ASP_N" END
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'P'       INST "P_PRIM"   END
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'q_m_liq' INST "Q_ASP_N"  END
   STRU ACTI
      #begin INST
         QQ = 0.
         IFTHEN (I_ASP1 == 0.)
            QQ= -1. * Q_ASP_N
            IF (I_ASP2 == 0.)  QQ = QQ / 2.
         ENDIF
         pump = BASE : 'SYSTEMS' 1 : 'PUMP' 'A_PRES1'
         pump('FLOW',1) <- QQ
         DELETE QQ
         DELETE pump
      #end
   END
   STRU ACTI
      #begin INST
         QQ = 0.
         IFTHEN (I_ASP2 == 0.)
            QQ= -1. * Q_ASP_N
            IF (I_ASP1 == 0.)  QQ = QQ / 2.
         ENDIF
         pump = BASE : 'SYSTEMS' 1 : 'PUMP' 'A_PRES2'
         pump('FLOW',1) <- QQ
         DELETE QQ
         DELETE pump
     #end
   END
END
!-----------------------------------------------------------------------------------------------------------------------
! NORMAL PRESSURIZER SPRAY UNAVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE 'ONCE' COND "((I_ASP1 == 100.) && (I_ASP2 == 100.))"
   STRU ACTI SENSOR I_ASP TITL "A: NORMAL PRESSURIZER SPRAY UNAVAILABLE"
      INST "I_ASP <- 100."
   END
END
STRU EVENT TYPE 'ONCE' COND "(I_ASP == 100.)"
   STRU ACTI
      SENSOR I_ASP1 TITL "A: NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 1 "
      SENSOR I_ASP2 TITL "A: NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 2"
      #begin INST
        I_ASP1 <- 100.
        I_ASP2 <- 100.
      #end
   END
   STRU ACTI PATH "BASE:SYSTEMS:PRESSURI(REG_PRES)" VAR  'q_m_liq' VALU  0. END
END
STRU EVENT  COND "(I_ASP1 == 100.)"
   STRU ACTI PATH "BASE:SYSTEMS:PUMP(A_PRES1)" VAR  'FLOW' VALU  0. END
   STRU ACTI PATH "BASE:CONNECTI(ASPCL1)" VAR  'STAT' VALU  'OFF' END
END
STRU EVENT  COND "(I_ASP2 == 100.)"
   STRU ACTI PATH "BASE:SYSTEMS:PUMP(A_PRES2)" VAR  'FLOW' VALU  0. END
   STRU ACTI PATH "BASE:CONNECTI(ASPCL2)" VAR  'STAT' VALU  'OFF' END
END
!-----------------------------------------------------------------------------------------------------------------------
!  NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 1 RCP201VP ON GMPP1 STOP
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE 'ONCE' COND "(GMPP1 == 0.)"
  STRU ACTI SENSOR I_ASP1 TITL "A: NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 1 " INST "I_ASP1 <- 100." END
END
!-----------------------------------------------------------------------------------------------------------------------
! NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 2 RCP202VP SUR ARRET GMPP2
!----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE 'ONCE' COND "(GMPP2 == 0.)"
  STRU ACTI SENSOR I_ASP2 TITL "A: NORMAL PRESSURIZER SPRAY UNAVAILABLE LOOP 2 " INST "I_ASP2 <- 100." END
END
!=======================================================================================================================
!= PRESSURIZER VALVE : SEBIM
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! SEBIM AVAILIBILITY
   !    I_SEBi = 0.   SEBIMi  Available
   !    I_SEBi = 1.   SEBIMi  Feed and bleed unavailable
   !    I_SEBi = 2.   SEBIMi  Locked closed
   !    I_SEBi = 3.   SEBIMi  Locked opened
   !    I_SEBi = 99.  Control failure
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_SEB1' value 0. END
   STRU SENSOR NAME 'I_SEB2' value 0. END
   STRU SENSOR NAME 'I_SEB3' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SEBIM OPERATING FLAG
   !    SEBi = 0.   SEBIM valve mode
   !    SEBi = 1.   SEBIM feed and bleed mode
   !    SEBi = 2.   SEBIM feed and bleed mode as long as DTSATC > TDSCSEB
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'SEB1' value 0. END
   STRU SENSOR NAME 'SEB2' value 0. END
   STRU SENSOR NAME 'SEB3' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SEBIM ISOLATING VALVE OPERATING FLAG
   !    ASEBi = 0.    SEBIM isolating valve opened automatism
   !    ASEBi = 1.    SEBIM isolating valve closed automatism
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ASEB1' value 0. END
   STRU SENSOR NAME 'ASEB2' value 0. END
   STRU SENSOR NAME 'ASEB3' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF FEED AND BLEED  : T_SEB
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_SEB' value 1.D09 END
   STRU SENSOR NAME 'TDSSEB' value 140.C END
   !--------------------------------------------------------------------------------------------------------------------
   ! OPERATOR TIME DELAY FEED AND BLEED ACTION
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_OP_SEB' value 0. END
   STRU EVENT TYPE 'ONCE'  COND "((I_SEB1 == 0. && SEB1 >= 1.) || (I_SEB2 == 0. && SEB2 >= 1.) || (I_SEB3 == 0. && SEB3 >= 1.))"
       !STRU ACTI  SENSOR T_SEB TITL "A: OPERATOR TIME DELAY FEED AND BLEED ACTION" INST "T_SEB <- TIME + T_OP_SEB" END
       STRU ACTI  INST "T_SEB <- TIME + T_OP_SEB" END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! SEBIM CLOSING - LOW PZR PRESSURE (MIN2)
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(P_PRIM < PPZRMIN2) && (TIME >= 0.)"
      STRU EVENT COND "(I_SEB1 <> 3.) && (SEB1 == 0.)"
         STRU ACTI  SENSOR ASEB1 TITL "A: ISOLATION SEBIM 1 LOW PZR PRES."  INST "ASEB1 <-1." END
      END
      STRU EVENT COND "(I_SEB2 <> 3.) && (SEB2 == 0.) "
         STRU ACTI  SENSOR ASEB2 TITL "A: ISOLATION SEBIM 2 LOW PZR PRES."  INST "ASEB2 <-1." END
      END
      STRU EVENT COND "(I_SEB3 <> 3.) && (SEB3 == 0.) "
         STRU ACTI  SENSOR ASEB3 TITL "A: ISOLATION SEBIM 3 LOW PZR PRES."  INST "ASEB3 <-1." END
      END
   END
   STRU EVENT COND "(P_PRIM > PPZRMIN1)  && (TIME >= 0.)"
      STRU EVENT COND "(I_SEB1 <> 3.) && (SEB1 == 0.)"
         STRU ACTI  SENSOR ASEB1 TITL "A: DE-ISOLATION SEBIM 1 LOW PZR PRES."  INST "ASEB1 <-0." END
      END
      STRU EVENT COND "(I_SEB2 <> 3.) && (SEB2 == 0.)"
         STRU ACTI  SENSOR ASEB2 TITL "A: DE-ISOLATION SEBIM 2 LOW PZR PRES."  INST "ASEB2 <-0." END
      END
      STRU EVENT COND "(I_SEB3 <> 3.) && (SEB3 == 0.)"
         STRU ACTI  SENSOR ASEB3 TITL "A: DE-ISOLATION SEBIM 3 LOW PZR PRES."  INST "ASEB3 <-0." END
      END
   END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER VALVE MODE
!-----------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "((I_SEB1 < 2.) || (I_SEB1 == 99.)) && (ASEB1 == 0.)"
      STRU EVENT COND "(SEB1 == 0.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB1)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 1 OPENED IN VALVE MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM1)" VAR 'OPEN' VALU 'NO' END
      END
   END
   STRU EVENT COND "((I_SEB2 < 2.) || (I_SEB2 == 99.)) && (ASEB2 == 0.)"
      STRU EVENT COND "(SEB2 == 0.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB2)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 2 OPENED IN VALVE MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM2)" VAR 'OPEN' VALU 'NO' END
      END
   END
   STRU EVENT COND "((I_SEB3 < 2.) || (I_SEB3 == 99.)) && (ASEB3 == 0.)"
      STRU EVENT COND "(SEB3 == 0.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB3)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 3 OPENED IN VALVE MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM3)" VAR 'OPEN' VALU 'NO' END
      END
   END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER VALVE FEED AND BLEED MODE
!-----------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(I_SEB1 == 0.)"
      STRU EVENT COND "(SEB1 == 1.) && (TIME > T_SEB)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB1)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 1 OPENED IN FEED AND BLEED MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM1)" VAR 'OPEN' VALU 'YES' END
      END
   END
   STRU EVENT COND "(I_SEB2 == 0.)"
      STRU EVENT COND "(SEB2 == 1.)  && (TIME > T_SEB)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB2)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 2 OPENED IN FEED AND BLEED MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM2)" VAR 'OPEN' VALU 'YES' END
      END
   END
   STRU EVENT COND "(I_SEB3 == 0.)"
      STRU EVENT COND "(SEB3 == 1.) && (TIME > T_SEB)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB3)" VAR  'STAT' VALU 'ON' END
         STRU ACTI TITL "A: SEBIM 3 OPENED IN FEED AND BLEED MODE" PATH "BASE:SYSTEMS:VALVE(SEBIM3)" VAR 'OPEN' VALU 'YES' END
      END
   END
!-----------------------------------------------------------------------------------------------------------------------
! PRESSURIZER VALVE ISOLATION
!-----------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "((I_SEB1 < 2.) || (I_SEB1 == 99.)) && (SEB1 == 0.)"
      STRU EVENT COND "(ASEB1 == 1.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB1)" VAR  'STAT' VALU 'OFF' END
         STRU ACTI PATH "BASE:SYSTEMS:VALVE(SEBIM1)" VAR 'OPEN' VALU 'NO' END
      END
   END
   STRU EVENT COND "((I_SEB2 < 2.) || (I_SEB2 == 99.)) && (SEB2 == 0.)"
      STRU EVENT COND "(ASEB2 == 1.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB2)" VAR  'STAT' VALU 'OFF' END
         STRU ACTI PATH "BASE:SYSTEMS:VALVE(SEBIM2)" VAR 'OPEN' VALU 'NO' END
      END
   END
   STRU EVENT COND "((I_SEB3 < 2.) || (I_SEB3 == 99.)) && (SEB3 == 0.)"
      STRU EVENT COND "(ASEB3 == 1.)"
         STRU ACTI PATH "BASE:CONNECTI(PRESSEB3)" VAR  'STAT' VALU 'OFF' END
         STRU ACTI PATH "BASE:SYSTEMS:VALVE(SEBIM3)" VAR 'OPEN' VALU 'NO' END
      END
   END
!-----------------------------------------------------------------------------------------------------------------------
! FEED AND BLEED UNAVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(I_SEB1 == 1.) && (SEB1 >= 1.)"
      STRU ACTI TITL "A: FEED AND BLEED SEBIM1 UNAVAILABLE" PATH "BASE:SYSTEMS:VALVE(SEBIM1)" VAR 'OPEN' VALU 'NO' END
   END
   STRU EVENT COND "(I_SEB2 == 1.) && (SEB2 >= 1.)"
      STRU ACTI TITL "A: FEED AND BLEED SEBIM2 UNAVAILABLE" PATH "BASE:SYSTEMS:VALVE(SEBIM2)" VAR 'OPEN' VALU 'NO' END
   END
   STRU EVENT COND "(I_SEB3 == 1.) && (SEB3 >= 1.)"
      STRU ACTI TITL "A: FEED AND BLEED SEBIM3 UNAVAILABLE" PATH "BASE:SYSTEMS:VALVE(SEBIM3)" VAR 'OPEN' VALU 'NO' END
   END
!-----------------------------------------------------------------------------------------------------------------------
! SEBIM : LOCKED CLOSED
!-----------------------------------------------------------------------------------------------------------------------
  STRU EVENT TYPE 'ONCE' COND "(I_SEB1 == 2.)"
     STRU ACTI TITL "A: SEBIM1 LOCKED CLOSED" PATH "BASE:CONNECTI(PRESSEB1)" VAR  'STAT' VALU 'OFF' END
  END
  STRU EVENT COND "(I_SEB2 == 2.)"
     STRU ACTI TITL "A: SEBIM2 LOCKED CLOSED" PATH "BASE:CONNECTI(PRESSEB2)" VAR  'STAT' VALU 'OFF' END
  END
  STRU EVENT COND "(I_SEB3 == 2.)"
     STRU ACTI TITL "A: SEBIM3 LOCKED CLOSED" PATH "BASE:CONNECTI(PRESSEB3)" VAR  'STAT' VALU 'OFF' END
  END
!-----------------------------------------------------------------------------------------------------------------------
! SEBIM : LOCKED OPENED
!-----------------------------------------------------------------------------------------------------------------------
  STRU EVENT TYPE 'ONCE' COND "(I_SEB1 == 3.)"
     STRU ACTI PATH "BASE:CONNECTI(PRESSEB1)" VAR  'STAT' VALU 'ON' END
     STRU ACTI TITL "A: SEBIM1 LOCKED OPENED" PATH "BASE:SYSTEMS:VALVE(SEBIM1)" VAR 'OPEN' VALU 'YES' END
  END
  STRU EVENT COND "(I_SEB2 == 3.)"
     STRU ACTI PATH "BASE:CONNECTI(PRESSEB2)" VAR  'STAT' VALU 'ON' END
     STRU ACTI TITL "A: SEBIM2 LOCKED OPENED" PATH "BASE:SYSTEMS:VALVE(SEBIM2)" VAR 'OPEN' VALU 'YES' END
  END
  STRU EVENT COND "(I_SEB3 == 3.)"
     STRU ACTI PATH "BASE:CONNECTI(PRESSEB3)" VAR  'STAT' VALU 'ON' END
     STRU ACTI TITL "A: SEBIM3 LOCKED OPENED" PATH "BASE:SYSTEMS:VALVE(SEBIM3)" VAR 'OPEN' VALU 'YES' END
  END

!=======================================================================================================================
!   MODELISATION DU RDP
!=======================================================================================================================
   !-----------------------------------------------------------------------------------------------------------------------
   !  I_RUPT : Flag traduisant la rupture des disques de rupture
   !            I_RUPT = 0 : les disques sont intacts
   !            I_RUPT = 1 : les disques ont rompus
   !-----------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_RUPT'  value 0. END
   !-----------------------------------------------------------------------------------------------------------------------
   ! Rupture de disque
   !-----------------------------------------------------------------------------------------------------------------------
    STRU EVENT COND "(I_RUPT == 0.) && (TIME >= 0.)"
      STRU ACTI
        SENSOR I_RUPT TITL "A: RUPTURE OF PRESSURISED RELIEF TANK DISC"
        #begin INST
            q1 = 0.
            q2 = 0.
            q3 = 0.
            m1 = 0.
            m2 = 0.
            m3 = 0.
            conn1 = BASE : 'CONNECTI' 'PRESSEB1'
            conn2 = BASE : 'CONNECTI' 'PRESSEB2'
            conn3 = BASE : 'CONNECTI' 'PRESSEB3'
            stat1 = conn1 : 'STAT'
            stat2 = conn2 : 'STAT'
            stat3 = conn3 : 'STAT'
            ! masses cumulees et debits des connexions
            IFTHEN (stat1 == 'ON')
               m1 = conn1 : 'SOURCE' 'SPEC' 'STEAM': 'FLOW': -1
               m1 = m1 + conn1 : 'SOURCE' 'SPEC' 'WATER': 'FLOW': -1
               q1 = conn1 : 'Qgas'
            ENDIF
            IFTHEN (stat2 == 'ON')
               m2 = conn2 : 'SOURCE' 'SPEC' 'STEAM': 'FLOW': -1
               m2 = m2 + conn2 : 'SOURCE' 'SPEC' 'WATER': 'FLOW': -1
               q2 = conn2 : 'Qgas'
            ENDIF
            IFTHEN (stat3 == 'ON')
               m3 = conn3 : 'SOURCE' 'SPEC' 'STEAM': 'FLOW': -1
               m3 = m3 + conn3 : 'SOURCE' 'SPEC' 'WATER': 'FLOW': -1
               q3 = conn3 : 'Qgas'
            ENDIF
            qtot = q1 + q2 + q3
            mtot = m1 + m2 + m3
            IFTHEN ((qtot > 0.) && (mtot > 1820.) && (P_PRIM >= 8.D5))
               I_RUPT <- 1.
            ENDIF
        #end
      END
    END
   !-----------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(I_RUPT == 1.)"
     STRU ACTI
        PATH "BASE:SYSTEMS:VALVE(SEBIM1)"
        VAR 'PRDP'
        INST "BASE:SENSOR('P_CONT'):'value'"
     END
     STRU ACTI
        PATH "BASE:SYSTEMS:VALVE(SEBIM2)"
        VAR 'PRDP'
        INST "BASE:SENSOR('P_CONT'):'value'"
     END
     STRU ACTI
        PATH "BASE:SYSTEMS:VALVE(SEBIM3)"
        VAR 'PRDP'
        INST "BASE:SENSOR('P_CONT'):'value'"
     END
   END
!=======================================================================================================================
!= SAFETY INJECTION SYSTEM SIS SIGNAL
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! SIS AUTOMATIC OPERATING FLAG
   !      IS_A = 0. Reset SIS automatic actuation
   !      IS_A = 1. SIS automatic actuation
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'IS_A' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
!.......................................................................................................................
!-----------------------------------------------------------------------------------------------------------------------
! SIS AUTOMATIC ACTUATION
!-----------------------------------------------------------------------------------------------------------------------
   !--------------------------------------------------------------------------------------------------------------------
   ! SIS ACTUATION ON VERY LOW PRESSURIZER PRESSURE
   ! ( without manual blocking P11)
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(P_PRIM < PPZRMIN4) && (BM_P11 == 0.) && (TIME > 0.)"
      STRU ACTI SENSOR IS_A TITL "A: SIS SIGNAL ON VERY LOW PRESSURIZER PRESSURE " INST "IS_A <- 1." END
      STRU ACTI INST "STEP <- 1." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! SIS ACTUATION ON HIGH CONTAINMENT PRESSURE MAX2
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(P_CONT > PC_MAX2)"
      STRU ACTI SENSOR IS_A TITL "A: SIS SIGNAL ON HIGH CONTAINMENT PRESSURE MAX2 " INST "IS_A <- 1." END
   END
   STRU EVENT COND "BM_P12 == 0."
      (i=0)
      #do
         (i=i+1)
         #if(i>nloop) #exit
         !--------------------------------------------------------------------------------------------------------------------
         ! SIS ACTUATION ON LOW COLD LEG TEMPERATURE
         !--------------------------------------------------------------------------------------------------------------------
            STRU EVENT TYPE 'ONCE' COND ("(T_CL"//CHAR(i)//" < TCLMIN2) && (P15 == 1.)" )
               STRU ACTI SENSOR IS_A TITL ("A: SIS SIGNAL ON LOW COLD LEG TEMPERATURE - CL"//CHAR(i)) INST "IS_A <- 1." END
            END
         !--------------------------------------------------------------------------------------------------------------------
         !    SIS ACTUATION ON LOW PRESSURE IN SG
         !--------------------------------------------------------------------------------------------------------------------
         STRU EVENT TYPE 'ONCE' COND ("(P_SG"//CHAR(i)//" < PSGMIN) && (TIME > 0.)")
            STRU ACTI SENSOR IS_A TITL ("A: SIS SIGNAL ON LOW PRESSURE IN SG"//CHAR(i))  INST "IS_A <- 1." END
         END
      #enddo
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! SIS TIME OF SIGNAL
   !      T_IS     time of SIS signal
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_IS'    value 1.D09 END
   STRU EVENT COND "(IS_A == 1.) && (T_IS == 1.D09)"
      STRU ACTI
         #begin INST
           T_IS    <- TIME
         #end
      END
   END
!=======================================================================================================================
! RECIRCULATION MODE FOR CSS
!=======================================================================================================================
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN2 PTR
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'VPTRMIN2' value (vptrmin2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN3 PTR
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'VPTRMIN3' value (vptrmin3) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MIN4 PTR
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'VPTRMIN4' value (vptrmin4) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX SUMP
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'VMAXSUMP' value (vmaxsump) END
!.......................................................................................................................
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   ! RECIRCULATION OPERATING FLAG
   !      RECIRC = 0.  SIS AND CSS FROM PTR
   !      RECIRC = 1.  SIS AND CSS FROM CONTAINMENT SUMP
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'RECIRC' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! RECIRCULATION ACTUATION ON MIN3 PTR LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(V_RWST < VPTRMIN3) && (TIME > 0.)"
      STRU ACTI SENSOR RECIRC TITL "A: RECIRCULATION ACTUATION ON MIN3 PTR LEVEL (FST)" INST " RECIRC <- 1." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! RECIRCULATION ACTUATION ON WATER VOLUME IN SUMP
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(VL_SUMP > VMAXSUMP) && (TIME > 0.)"
      STRU ACTI SENSOR RECIRC TITL "A: RECIRCULATION ACTUATION ON MAX SUMP LEVEL" INST " RECIRC <- 1." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF RECIRCULATION ACTUATION
   !      T_RECIR
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_RECIR' value 1.D09  END
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(RECIRC == 1.)"
      STRU ACTI SENSOR T_RECIR TITL "A: RECIRCULATION STARTING (FST)" INST "T_RECIR <- TIME" END
   END
!=======================================================================================================================
!= ACCUMULATOR
!=======================================================================================================================
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !============================================================================
   ! FLAG DE DISPONIBILITE DU PILOTAGE DES ACCUMULATEUR RIS
   !    ACCUi = 0 : accumulateur pilotable
   !    ACCUi = 100 : accumulateur non pilotable
   !============================================================================
   STRU SENSOR NAME (WORD('ACCU'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! ACCUMULATOR OPERATING FLAG
   !    I_ACCUi = 0 : accumulator valve opened (available)
   !    I_ACCUi = 1 : accumulator valve closed (unavailable)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('I_ACCU'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! ACCUMULATEUR AVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND ("(I_ACCU"//CHAR(i)//" == 0.) && (ACCU"//CHAR(i)//" <> 100.) && (EMP_ACC"//CHAR(i)//" <> 1.)")
      STRU ACTI PATH ("BASE:SYSTEMS:ACCUMULA(RIS00"//CHAR(i)//"BA)") VAR  'STAT' VALU 'ON' END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! ACCUMULATEUR UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND ("(I_ACCU"//CHAR(i)//" == 1.)")
      STRU ACTI PATH ("BASE:SYSTEMS:ACCUMULA(RIS00"//CHAR(i)//"BA)") VAR  'STAT' VALU 'OFF' END
   END
#enddo
   STRU SENSOR NAME I_ACCU
      #begin INST
         i_accu = 0.
         nloop = BASE:'DESIGN' : 'RCS':'nloop'
         DO i 1 nloop
            accun  = WORD('I_ACCU'//CHAR(i))
            iaccui   = BASE : 'SENSOR' accun: 'value'
            i_accu = i_accu + iaccui
         ENDDO
         i_accu
      #end
   END
!***********************************************************************************************************************
! CONTAINMENT
!***********************************************************************************************************************
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX4 CONTAINMENT PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PC_MAX4' value (pc_max4) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX3 CONTAINMENT PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PC_MAX3' value (pc_max3) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX2 CONTAINMENT PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PC_MAX2' value (pc_max2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAX1 CONTAINMENT PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PC_MAX1' value (pc_max1) END

!-----------------------------------------------------------------------------------------------------------------------
!  EAS
!-----------------------------------------------------------------------------------------------------------------------
   !--------------------------------------------------------------------------------------------------------------------
   !  CSS AVAILABILITY
   !       I_EAS = 0      : CSS available
   !       I_EAS = 100.   : CSS unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_EAS' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  CSS OPERATING FLAG
   !       EAS = 0   : CSS shut off
   !       EAS = 1   : CSS in use
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'EAS' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  NUMBER OF CSS PUMP IN USE
   !       EAS_PO = 0 : 0 PUMP in use
   !       EAS_PO = 1 : 1 PUMP in use
   !       EAS_PO = 2 : 2 PUMP in use
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'EAS_PO' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   !  CSS PUMP AVAILABILITY
   !  I_EAS_PO = 0. : 0 CSS pump available
   !  I_EAS_PO = 1. : 1 CSS pump available
   !  I_EAS_PO = 2. : 2 CSS pump available
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_EAS_PO' value 2. END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS SIGNAL
   !      EAS_S = 0. reset CSS signal
   !      EAS_S = 1. CSS signal
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'EAS_S' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF CSS STARTING
   !      T_EAS  : signal time
   !      DT_EAS : CSS starting delay
   !      T_EASeff : CSS starting time
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_EAS'    value 0.  END
   STRU SENSOR NAME 'DT_EAS'   value 17. END
   STRU SENSOR NAME 'T_EASeff' value 0.  END
   STRU EVENT COND "(EAS_S == 1.) && (T_EAS == 0.)"
      STRU ACTI INST "T_EAS <- TIME"           END
      STRU ACTI INST "T_EASeff <- TIME+DT_EAS" END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS STARTING
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "((EAS_S==1.) && (I_EAS<>100.) && (TIME>T_EASeff))"
      STRU ACTI SENSOR EAS TITL "A: STARTING CSS" INST "EAS <-1." END
      STRU ACTI INST "EAS_PO <- I_EAS_PO" END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS AVAIBILITY
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(I_EAS_PO == 0. && TIME > 0.)"
      STRU ACTI SENSOR I_EAS TITL "A: CSS UNAVAILABLE (FST)" INST "I_EAS <- 100." END
      STRU ACTI INST "EAS_PO <- 0." END
   END
   STRU EVENT TYPE 'ONCE' COND "(I_EAS == 100. && TIME > 0.)"
      STRU ACTI SENSOR I_EAS_PO TITL "A: CSS UNAVAILABLE (FST)" INST "I_EAS_PO <- 0." END
      STRU ACTI INST "EAS_PO <- 0." END
      STRU ACTI INST "EAS <- 0." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS AVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(EAS == 1.) && (I_EAS == 0.)"
      STRU ACTI
        #begin INST
          valve = BASE:'SYSTEMS':'VALVE' 'FSD1'
          valve('STAT',1) <- 'OFF'
          IF (EAS_PO >= 1.  && RECIRC == 0.) valve('STAT',1) <- 'ON'
          valve = BASE:'SYSTEMS':'VALVE' 'FSD2'
          valve('STAT',1) <- 'OFF'
          IF (EAS_PO == 2. && RECIRC == 0.) valve('STAT',1) <- 'ON'
          valve = BASE:'SYSTEMS':'VALVE' 'FS2'
          valve('STAT',1) <- 'OFF'
          IF (EAS_PO == 2. && RECIRC == 1. && WL_SUMP > 0.11) valve('STAT',1) <- 'ON'
          valve = BASE:'SYSTEMS':'VALVE' 'FS1'
          valve('STAT',1) <- 'OFF'
          IF (EAS_PO >= 1. && RECIRC == 1. && WL_SUMP > 0.11) valve('STAT',1) <- 'ON'
          DELETE valve
        #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS PUMP LOSS ON EMPTY SUMP
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(EAS == 1. && RECIRC == 1. && WL_SUMP <= 0.11)"
      STRU ACTI SENSOR I_EAS_PO TITL "A: CSS PUMP UNAVAILABLE EMPTY SUMP" INST " I_EAS_PO <- 0." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CSS UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(I_EAS == 100.)"
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(FS1)" VAR   'STAT' VALU 'OFF' END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(FS2)" VAR   'STAT' VALU 'OFF' END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(FSD1)" VAR  'STAT' VALU 'OFF' END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(FSD2)" VAR  'STAT' VALU 'OFF' END
   END

!***********************************************************************************************************************
! SECONDARY CIRCUIT
!***********************************************************************************************************************
!=======================================================================================================================
! STEAM GENERATOR
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW SG NARROW RANGE LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'NGEMIN1' value (ngemin1) END
   !--------------------------------------------------------------------------------------------------------------------
   ! VERY LOW SG NARROW RANGE LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'NGEMIN2' value (ngemin2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! VERY HIGH SG NARROW RANGE LEVEL
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'NGEMAX2' value (ngemax2) END
   !--------------------------------------------------------------------------------------------------------------------
   ! LOW SG PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PSGMIN' value (psgmin) END
   !--------------------------------------------------------------------------------------------------------------------
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! Capteurs niveaux GV
   ! PNGVGEi = 0.   Pas de panne sur le capteur  GE GVi
   ! PNGVGEi = 100. Panne sur le capteur  GE GVi
   ! PNGVGLi = 0.   Pas de panne sur le capteur  GL GVi
   ! PNGVGLi = 100. Panne sur le capteur  GL GVi
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('PNGVGE'//CHAR(i))) value 0. END
   STRU SENSOR NAME (WORD('PNGVGL'//CHAR(i))) value 0. END
#enddo
!=======================================================================================================================
! ALARM VERY LOW LEVEL IN 2 SG
!        N15_GE = 0. NO ALARM
!        N15_GE = 1. ALARM VERY LOW LEVEL IN 2 SG NR_SG < 15%
!=======================================================================================================================
STRU SENSOR NAME 'N15_GE' value 0. END
STRU EVENT COND "(TIME >= 0.)"
   STRU ACTI
      #begin INST
         NBHGV = 0.
         nloop = BASE:'DESIGN' : 'RCS':'nloop'
         DO i 1 nloop
             ngegv   = BASE : 'SENSOR'("NR_SG"//CHAR(i)): 'value'
             IF (ngegv < 15.) NBHGV = NBHGV + 1.
         ENDDO
         IF (NBHGV > 1.) N15_GE <- 1.
         DELETE NBHGV
         DELETE nloop
         DELETE ngegv
         DELETE i
      #end
   END
END
!-----------------------------------------------------------------------------------------------------------------------
!  Perte des niveaux GV GL et GE sur un GV entraine GV indisponible
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT TYPE ONCE COND "(PNGVGL1==100. && PNGVGE1==100.)"
   STRU ACTI SENSOR E_GV1 TITL "I: GV1 indisponible" INST "E_GV1 <- 3." END
END
STRU EVENT TYPE ONCE COND "(PNGVGL2==100. && PNGVGE2==100.)"
   STRU ACTI SENSOR E_GV2 TITL "I: GV2 indisponible" INST "E_GV2 <- 3." END
END
STRU EVENT TYPE ONCE COND "(PNGVGL3==100. && PNGVGE3==100.)"
   STRU ACTI SENSOR E_GV3 TITL "I: GV3 indisponible" INST "E_GV3 <- 3." END
END
STRU EVENT TYPE ONCE COND "(PNGVGL4==100. && PNGVGE4==100.)"
   STRU ACTI SENSOR E_GV4 TITL "I: GV4 indisponible" INST "E_GV4 <- 3." END
END
!***********************************************************************************************************************
! SECONDARY CIRCUIT SYSTEMS
!***********************************************************************************************************************
!=======================================================================================================================
! MFW STEAM GENERATOR
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! MFWS AVAIBILITY
   !       I_ARE = 0.   MFW AVAILABLE
   !       I_ARE = 100. MFW UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_ARE' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW OPERATING FLAG
   !       ARE = 0. MFW stopped
   !       ARE = 1. MFW narrow level regulation
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ARE' value 1. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW OPERATING FLAG
   !       ARED = 1. MFW FULL LOAD LINE
   !       ARED = 2. MFW LOW LOAD LINE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ARED' value 1. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW LOW LOAD LINE MAXIMAL FLOW RATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QM_AREPD' value (qm_arepd) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW FULL LOAD LINE MAXIMAL FLOW RATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QM_AREGD' value (qm_aregd) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW MAXIMAL FLOW RATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QM_ARE' value (qm_are) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW NOMINAL FLOW RATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QN_ARE' value (qn_are) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW NOMINAL MINIMUM FLOW RATE RATIO
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'MIN1_ARE' value (min1_are) END
   STRU SENSOR NAME 'MIN2_ARE' value (min2_are) END
   !====================================================================================================================
   ! MFW INJECTION PRESSURE / MAXIMAL FLOWRATE
   !====================================================================================================================
   STRU EVENT  COND "(I_ARE == 0.)"
     (i=0)
     #do
        (i=i+1)
        #if(i>nloop) #exit
        STRU ACTI PATH ("BASE:CONNECTI(AREGV"//CHAR(i)//")") VAR  'PINJ'
           INST ("BASE :'SENSOR' 'P_SG"//CHAR(i)//"':'value'")
        END
     #enddo
     STRU ACTI
        #begin INST
           IF (ARED == 1.) QM_ARE <- (QM_AREPD+QM_AREGD)
           IF (ARED == 2.) QM_ARE <- QM_AREPD
        #end
     END
   END
   !--------------------------------------------------------------------------------------------------------------------
   !  ALARM LOW MFW FLOW
   !       BQ_ARE = 0.  NO ALARM
   !       BQ_ARE = 1.  ALARM LOW MFW FLOW  SGi< MIN1 Qn
   !       BQ_ARE = 2.  ALARM VERY LOW MFW FLOW  SGi< MIN2 Qn
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'BQ_ARE' value 0. END
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
      STRU SENSOR NAME (WORD('BQ_ARE'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT  COND "(TIME >= 0.)"
         STRU EVENT TYPE 'ONCE' COND ("(QL_MFW"//CHAR(i)//" < (QN_ARE * MIN1_ARE )) && (QL_MFW"//CHAR(i)//" > (QN_ARE * MIN2_ARE ))")
            STRU ACTI TITL ("A: MIN1 LOW MFW FLOW RATE SG"//CHAR(i))
               PATH ("BASE:SENSOR (BQ_ARE"//CHAR(i)//")") VAR 'value' VALU 1.
            END
         END
         STRU EVENT TYPE 'ONCE' COND ("(QL_MFW"//CHAR(i)//" < (QN_ARE * MIN2_ARE ))")
            STRU ACTI TITL ("A: MIN2 LOW MFW FLOW RATE SG"//CHAR(i))
               PATH ("BASE:SENSOR (BQ_ARE"//CHAR(i)//")") VAR 'value' VALU 2.
            END
         END
         STRU EVENT TYPE 'ONCE' COND ("(BQ_ARE"//CHAR(i)//" == 1. )")
            STRU ACTI  INST "BQ_ARE <- 1." END
         END
         STRU EVENT TYPE 'ONCE' COND ("(BQ_ARE"//CHAR(i)//" == 2. )")
            STRU ACTI  INST "BQ_ARE <- 2." END
         END
      END
   #enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF CLOSING MFW
   !    TD_ARE : Beginning time
   !    TF_ARE : Ending time
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TD_ARE' value 0. END
   STRU SENSOR NAME 'TF_ARE' value 0. END
   STRU SENSOR NAME 'DTFARE' value (dtfare) END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   STRU SENSOR NAME (WORD('QGV'//CHAR(i)//'_I')) value 0. END
#enddo
!-----------------------------------------------------------------------------------------------------------------------
! MFW AVAILABLE
!-----------------------------------------------------------------------------------------------------------------------
STRU EVENT COND "I_ARE == 0."
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MFW ON SIS ACTUATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(IS_A == 1.)"
      STRU ACTI SENSOR ARE TITL "A: CLOSING MFW ON SIS ACTUATION" INST "ARE <- 0." END
  END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MFW ON VERY HIGH SG LEVEL
   !--------------------------------------------------------------------------------------------------------------------
!.......................................................................................................................
    STRU EVENT COND "P7 == 1."
!.......................................................................................................................
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
      STRU EVENT TYPE 'ONCE' COND ("(NR_SG"//CHAR(i)//" > NGEMAX2)")
         STRU ACTI TITL ("A: CLOSING MFW ON VERY HIGH SG"//CHAR(i))  INST "ARE <- 0." END
      END
#enddo
!.......................................................................................................................
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW LOW LOAD LINE ON VERY LOW AVERAGE PRIMARY TEMPERATURE AND P4
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(T_MEAN< TMOYMIN1) && (P4 == 1.) && (ARE <> 0.)"
      STRU ACTI SENSOR ARED TITL "A: MFW LOW LOAD LINE ON VERY LOW AVERAGE PRIMARY TEMPERATURE" INST "ARED <- 2." END
   END
   STRU EVENT COND "P15 == 1."
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
       STRU EVENT TYPE 'ONCE' COND ("(T_CL"//CHAR(i)//" <TCLMIN1)")
           STRU ACTI SENSOR ARE TITL ("A: CLOSING MFW ON VERY LOW COLD LEG TEMP. CL"//CHAR(i)) INST "ARE <- 0." END
       END
#enddo
    END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW STOP
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(ARE == 0.)"
      STRU ACTI INST "TD_ARE <- TIME" END
      STRU ACTI INST "TF_ARE <- TIME + DTFARE" END
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               conname  = WORD('AREGV'//CHAR(i))
               stat = BASE : 'CONNECTI' conname : 'STAT'
               pumpname = WORD('ARE_GV'//CHAR(i))
               flow = 0.
               IF (stat == 'ON') flow   = BASE : 'SYSTEMS' 1 : 'PUMP' pumpname  : 'FLOW'
               qarename = WORD('QGV'//CHAR(i)//'_I')
               ROOTBASE(qarename) <- flow
            ENDDO
            DELETE nloop
            DELETE conname
            DELETE stat
            DELETE flow
            DELETE pumpname
            DELETE qarename
            DELETE conname
            DELETE i
         #end
      END
   END
   STRU EVENT COND "( (TD_ARE > 0.) && (TIME > TD_ARE) && (TIME < TF_ARE))"
     STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               flow = 0.
               conname  = WORD('AREGV'//CHAR(i))
               stat = BASE : 'CONNECTI' conname : 'STAT'
               pumpname = WORD('ARE_GV'//CHAR(i))
               qarename = WORD('QGV'//CHAR(i)//'_I')
               qare    = BASE : 'SENSOR' qarename: 'value'
               q = 0.
               IF (stat == 'ON') q = qare * ( TIME - TF_ARE) / ( TD_ARE - TF_ARE)
               pump = BASE : 'SYSTEMS' 1 : 'PUMP' pumpname
               pump('FLOW',1) <- q
            ENDDO
            DELETE nloop
            DELETE flow
            DELETE stat
            DELETE pumpname
            DELETE qarename
            DELETE q
            DELETE qare
            DELETE pump
            DELETE i
            DELETE conname
         #end
      END
   END
   STRU EVENT TYPE 'ONCE' COND "((TIME > TF_ARE) && (TF_ARE > 0.))"
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
      STRU ACTI TITL ("A: CLOSED MFW SG"//CHAR(i)) PATH ("BASE:SYSTEMS:PUMP(ARE_GV"//CHAR(i)//")")
         VAR  'FLOW' VALU  0.0
      END
   #enddo
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW STEAM GENERATOR NARROW LEVEL REGULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "( ARE == 1.)"
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               conname  = WORD('AREGV'//CHAR(i))
               stat = BASE : 'CONNECTI' conname : 'STAT'
               pumpname = WORD('ARE_GV'//CHAR(i))
               ngecname = WORD('NGECGV'//CHAR(i))
               ngename  = WORD('NR_SG'//CHAR(i))
               qsgvname = WORD('QS_SG'//CHAR(i))
               ngec     = BASE : 'SENSOR' ngecname : 'value'
               nge      = BASE : 'SENSOR' ngename : 'value'
               qsgv     = BASE : 'SENSOR' qsgvname : 'value'
               G        = 0.01
               IF (TIME < 0.) G = 0.
               q        = 0.
               IF (stat == 'ON') q = qsgv + G * (ngec - nge)
               q = MAX(q,0.)
               q = MIN(q,QM_ARE)
               pump = BASE : 'SYSTEMS' 1 : 'PUMP' pumpname
               pump('FLOW',1) <- q
            ENDDO
            DELETE nloop
            DELETE conname
            DELETE stat
            DELETE pumpname
            DELETE ngecname
            DELETE ngename
            DELETE qsgvname
            DELETE ngec
            DELETE nge
            DELETE qsgv
            DELETE G
            DELETE pump
            DELETE q
            DELETE i
         #end
      END
   END
END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW UNVALAIBLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "( I_ARE == 100.)"
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
      STRU ACTI TITL ("A: CLOSED MFW SG"//CHAR(i)) PATH ("BASE:CONNECTI(AREGV"//CHAR(i)//")")
        VAR  'STAT' VALU 'OFF'
      END
      STRU ACTI PATH ("BASE:SYSTEMS:PUMP(ARE_GV"//CHAR(i)//")")
        VAR  'FLOW' VALU  0.0
      END
#enddo
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! MFW ALARM ARE980AA
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ARE980AA' value 0. END
   STRU EVENT TYPE 'ONCE' COND "I_ARE == 100."
      STRU ACTI INST "ARE980AA <- 1." END
   END
!=======================================================================================================================
! TURBINE
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! TURBINE AVAILABILITY
   !       I_GRE = 0 Available
   !       I_GRE = 1 UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_GRE' value 0. END
   STRU SENSOR NAME 'T_ITURB' value 1.D9 END
   STRU SENSOR NAME 'DTITURB' value (dtiturb) END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING TURBINE ON REACTOR TRIP ACTUATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(AAR == 1.)"
     STRU ACTI SENSOR I_GRE TITL "A: CLOSING TURBINE ON REACTOR TRIP ACTUATION" INST "I_GRE <- 1." END
  END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING TURBINE ON SIS ACTUATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(IS_A == 1.)"
     STRU ACTI SENSOR I_GRE TITL "A: CLOSING TURBINE ON SIS ACTUATION" INST "I_GRE <- 1." END
  END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING TURBINE ON VERY HIGH SG LEVEL (NR_SGi>NGEMAX2)
   !--------------------------------------------------------------------------------------------------------------------
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
      STRU EVENT TYPE 'ONCE' COND ("(NR_SG"//CHAR(i)//" > NGEMAX2) && (TIME >= 0.)" )
         STRU ACTI SENSOR I_GRE TITL ("A: CLOSING TURBINE ON VERY HIGH LEVEL SG"//CHAR(i))  INST "I_GRE <- 1." END
      END
#enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING TURBINE ON COLD LEG TEMPERATURE AND P15
   !   Signal isolement TURBINE SUR BASSE TEMPERATURE BRANCHE FROIDE
   !--------------------------------------------------------------------------------------------------------------------
    STRU EVENT COND "P15 == 1."
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
       STRU EVENT TYPE 'ONCE' COND ("(T_CL"//CHAR(i)//" <TCLMIN1)")
           STRU ACTI SENSOR I_GRE TITL ("A: CLOSING TURBINE ON LOW COLD LEG TEMPERATURE AND P15 CL"//CHAR(i))
                INST "I_GRE <- 1."
           END
       END
#enddo
    END
   !--------------------------------------------------------------------------------------------------------------------
   ! TURBINE UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(I_GRE == 1.) "
     STRU ACTI INST "T_ITURB <- TIME + DTITURB" END
   END
   STRU EVENT TYPE 'ONCE' COND "(I_GRE == 1. && TIME >= T_ITURB) "
      STRU ACTI TITL "A: TURBINE Isolation" PATH "BASE:CONNECTI(PGRE)" VAR  'STAT' VALU 'OFF' END
      STRU ACTI PATH "BASE:CONNECTI(QVGRE)" VAR 'STAT' VALU 'OFF' END
      STRU ACTI PATH "BASE:CONNECTI(QLGRE)" VAR 'STAT' VALU 'OFF' END
   END
!=======================================================================================================================
! STEAM GENERATOR
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF CLOSING MSIV
   !      DT_ISOV    Delay of closing MSIV
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DTISOV' value (dtisov) END
   !--------------------------------------------------------------------------------------------------------------------
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! SG STAE
   !    E_GVi = 0. : SGi available
   !    E_GVi = 1. : SGi unavailable
   !    E_GVi = 2. : SGi radioactive and unavailable
   !    E_GVi = 3. : SGi unavailable but re-use is possible
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('E_GV'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SG ACTIVITY
   !    A_GVi = 0. : SGi activity lower than setpoint
   !    A_GVi = 1. : SGi activity upper than setpoint
   !    A_GVi = 2. : SGI activity over limit
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('A_GV'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SG FEED WATER ISOLATED OPERATING FLAG
   !    IE_GVi = 0 : SGi Feed water is not isolated
   !    IE_GVi = 1 : SGi Feed water isolated
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('IE_GV'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi STEAM ISOLATED OPERATING FLAG
   !    IV_GVi = 0 : SGi steam line is not closed
   !    IV_GVi = 1 : SGi steam line is closed
   !    IV_GVi = 100 : SGi steam line non isolable
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('IV_GV'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MSIV OPERATING FLAG
   !    ISOVi = 0 : MSIV opened
   !    ISOVi = 1 : MSIV closed
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('ISOV'//CHAR(i))) value 0. END
      STRU SENSOR NAME (WORD('S_ISOV'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! TIME OF CLOSING MSIV
   !      T_ISOVi   Time of closing SGi MSIV
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('T_ISOV'//CHAR(i))) value 1.D09 END
      STRU EVENT TYPE 'ONCE' COND ("(ISOV"//CHAR(i)//" == 1.)")
         STRU ACTI INST (WORD('T_ISOV'//CHAR(i))//" <- TIME + DTISOV")  END
      END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi CLOSING AFW
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT  COND ("(IE_GV"//CHAR(i)//" == 1.)")
         STRU ACTI TITL ("A: CLOSING AFW SG"//CHAR(i))
            SENSOR (WORD('ASG'//CHAR(i))) INST (WORD('ASG'//CHAR(i))//"<- 0.")
         END
         STRU ACTI TITL ("A: CLOSING PES IN SG"//CHAR(i))
            SENSOR (WORD('I_PESSG'//CHAR(i))) INST (WORD('I_PESSG'//CHAR(i))//"<- 100.")
         END
      END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MSIV
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND ("(ISOV"//CHAR(i)//" == 1.) && (TIME > T_ISOV"//CHAR(i)//") && (IV_GV"//CHAR(i)//" <> 100.)")
         STRU ACTI TITL ("A: CLOSING MSIV SG"//CHAR(i))
            PATH ("BASE:SECONDAR:JUNCTION(STSTH"//CHAR(i)//")") VAR  CLOSE VALU 1
         END
      END
      STRU EVENT  COND ("(IV_GV"//CHAR(i)//" == 1.)")
         STRU ACTI
            INST (WORD('ISOV'//CHAR(i))//" <- 1.")
         END
      END
      STRU EVENT  COND ("(S_ISOV"//CHAR(i)//" == 1.)")
         STRU ACTI
            PATH ("BASE:SENSOR(ISOV"//CHAR(i)//")") VAR 'value' VALU 1.
         END
      END
   !--------------------------------------------------------------------------------------------------------------------
   ! OPENING MSIV
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT  COND ("(ISOV"//CHAR(i)//" == 0.)")
         STRU ACTI TITL ("A: OPENING MSIV SG"//CHAR(i))
            PATH ("BASE:SECONDAR:JUNCTION(STSTH"//CHAR(i)//")") VAR  CLOSE VALU 0
         END
      END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MSIV ACTUATION ON LOW SGi PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT TYPE 'ONCE'  COND ("(P_SG"//CHAR(i)//" < PSGMIN) && (BM_P12 == 0.) && (TIME > 0.) && (ISOV"//CHAR(i)//" == 0.)")
      STRU ACTI  TITL ("A: CLOSING MSIV SG ON LOW PRESSURE SG "//CHAR(i)//"")
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               g  = WORD('S_ISOV'//CHAR(i))
               ROOTBASE(g) <- 1.
            ENDDO
            DELETE nloop
            DELETE g
            DELETE i
         #end
      END
   END
#enddo
!-----------------------------------------------------------------------------------------------------------------------
!  NUMBER OF MSIV SG CLOSED
!-----------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'isov'
   #begin INST
      nloop = BASE:'DESIGN' : 'RCS':'nloop'
      isov = 0.
      DO i 1 nloop
         niso  = WORD('ISOV'//CHAR(i))
         isoi  = BASE : 'SENSOR' niso : 'value'
         isov  = isov + isoi
      ENDDO
      isov
   #end
END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MSIV ACTUATION ON LOW COLD LEG TEMPERATURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND ("(T_CL"//CHAR(i)//" < TCLMIN2) && (P15 == 1.) && (ISOV"//CHAR(i)//" == 0.)")
      STRU ACTI  TITL ("A: CLOSING MSIV SG ON LOW TEMPERATURE CL"//CHAR(i))
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               g  = WORD('S_ISOV'//CHAR(i))
               ROOTBASE(g) <- 1.
            ENDDO
            DELETE nloop
            DELETE g
            DELETE i
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MSIV ON FAST DEPRESSURISATION SG
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('POLDGV'//CHAR(i))) value 0. END
      STRU SENSOR NAME (WORD('BR_PGV'//CHAR(i))) value 0. END
#enddo
      STRU SENSOR NAME 'TIME_OLD' value 0. END
      STRU SENSOR NAME 'DP_DT_GV' value 1.D9 END
      STRU EVENT COND "(TIME >= 0.)"
         STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            IF (TIME  > TIME_OLD) DP_DT_GV <- (-7.D5 * (TIME - TIME_OLD))
            IFTHEN(TIME  > 0.01 )
               DO i 1 nloop
                  brpgv    = WORD('BR_PGV'//CHAR(i))
                  poldgvn  = WORD('POLDGV'//CHAR(i))
                  pgvn     = WORD('P_SG'//CHAR(i))
                  pgv      = BASE : 'SENSOR' pgvn : 'value'
                  poldgv   = BASE : 'SENSOR' poldgvn : 'value'
                  IF ((pgv - poldgv) <= DP_DT_GV) ROOTBASE(brpgv) <- 1.
                  ROOTBASE(poldgvn) <- pgv
               ENDDO
               TIME_OLD <- TIME
            ENDIF
            DELETE nloop
            DELETE brpgv
            DELETE poldgvn
            DELETE pgvn
            DELETE pgv
            DELETE poldgv
            DELETE i
         #end
      END
   END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
      STRU EVENT TYPE 'ONCE' COND ("(BR_PGV"//CHAR(i)//" == 1.) && (ISOV"//CHAR(i)//" == 0.)")
      STRU ACTI  TITL ("A: CLOSING MSIV SG ON FAST DEPRESSURISATION SG"//CHAR(i))
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               g  = WORD('S_ISOV'//CHAR(i))
               ROOTBASE(g) <- 1.
            ENDDO
            DELETE nloop
            DELETE g
            DELETE i
         #end
      END
   END
#enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! CLOSING MSIV ACTUATION ON MAX3 CONTAINMENT PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND ("(P_CONT > PC_MAX3) && (ISOV1 == 0. || ISOV2 == 0. || ISOV3 == 0. || ISOV4 == 0.)")
      STRU ACTI  TITL ("A: CLOSING MSIV SG ON MAX3 CONTAINMENT PRESSURE")
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               g  = WORD('S_ISOV'//CHAR(i))
               ROOTBASE(g) <- 1.
            ENDDO
            DELETE nloop
            DELETE g
            DELETE i
         #end
      END
   END
!=======================================================================================================================
! AFW
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! MAXIMUM AFW PUMP FLOW
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QMMPASG' value (qmmpasg) END
   !--------------------------------------------------------------------------------------------------------------------
   ! MAXIMUM TURBINE DRIVEN AFW FLOW
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'QMTPASG' value (qmtpasg) END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW STARTING COEFFICIENT RATE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'FDASG' value 0. END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW SG LEVEL SET POINT
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('NC_ASG'//CHAR(i))) value (ncgvasg) END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW FLOWRATE SET POINT
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('QC_ASG'//CHAR(i))) value 0. END
#enddo
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW PUMP AVAILABILITY FLAG SG1/4
   !    I_MPASG1 = 0 : AFW pump unavailable SG1/4
   !    I_MPASG1 = 1 : 1 AFW pump available SG1/4
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_MPASG1'  value 1. END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW PUMP AVAILABILITY FLAG SG2/3
   !    I_MPASG2 = 0 : AFW pump unavailable SG2/3
   !    I_MPASG2 = 1 : 1 AFW pump available SG2/3
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR  NAME 'I_MPASG2'  value 1.  END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW PUMP OPERATING FLAG SG1/4
   !    MPASG1 = 0 : 0 AFW pump in use SG1/4
   !    MPASG1 = 1 : 1 AFW pump in use SG1/4
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'MPASG1'  value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW PUMP OPERATING FLAG FLAG SG2/3
   !    MPASG2 = 0 : 0 AFW pump in use  SG2/3
   !    MPASG2 = 1 : 1 AFW pump in use SG2/3
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR  NAME 'MPASG2'  value 0.  END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW TURBINE DRIVEN PUMP AVAILABILITY FLAG SG1/4
   !    I_TPASG1 = 0 : AFW pump unavailable SG1/4
   !    I_TPASG1 = 1 : 1 AFW pump available SG1/4
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_TPASG1'  value 1. END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW TURBINE DRIVEN PUMP AVAILABILITY FLAG SG2/3
   !    I_TPASG2 = 0 : AFW pump unavailable SG2/3
   !    I_TPASG2 = 1 : 1 AFW pump available SG2/3
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR  NAME 'I_TPASG2'  value 1.  END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW TURBINE DRIVEN PUMP OPERATING FLAG SG1/4
   !    TPASG1 = 0 : 0 AFW pump in use SG1/4
   !    TPASG1 = 1 : 1 AFW pump in use SG1/4
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'TPASG1'  value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW TURBINE DRIVEN PUMP OPERATING FLAG FLAG SG2/3
   !    TPASG2 = 0 : 0 AFW pump in use  SG2/3
   !    TPASG2 = 1 : 1 AFW pump in use SG2/3
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR  NAME 'TPASG2'  value 0.  END
   !--------------------------------------------------------------------------------------------------------------------
   ! EXTRACTED STEAM AFW DRIVEN TURBINE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PM_TPASG' value 9.D5 END
   STRU SENSOR NAME 'P1TPASG'  value 89.6D5 END
   STRU SENSOR NAME 'P2TPASG'  value 7.D5   END
   STRU SENSOR NAME 'Q1TPASG'  value 3.33   END
   STRU SENSOR NAME 'Q2TPASG'  value 0.83   END
   STRU SENSOR NAME 'PMAXG1'
      #begin INST
         PGV1  = BASE : 'SENSOR' 'P_SG1'  : 'value'
         PGV4  = BASE : 'SENSOR' 'P_SG4'  : 'value'
         IVGV1 = BASE : 'SENSOR' 'IV_GV1'  : 'value'
         IVGV4 = BASE : 'SENSOR' 'IV_GV4'  : 'value'
         IF (IVGV1 == 1. ) PGV1 = 0.
         IF (IVGV4 == 1. ) PGV4 = 0.
         PMAX = MAX(PGV1,PGV4)
         PMAX
      #end
   END
   STRU SENSOR NAME 'PMAXG2'
      #begin INST
         PGV2  = BASE : 'SENSOR' 'P_SG2'  : 'value'
         PGV3  = BASE : 'SENSOR' 'P_SG3'  : 'value'
         IVGV2 = BASE : 'SENSOR' 'IV_GV2'  : 'value'
         IVGV3 = BASE : 'SENSOR' 'IV_GV3'  : 'value'
         IF (IVGV2 == 1. ) PGV2 = 0.
         IF (IVGV3 == 1. ) PGV3 = 0.
         PMAX = MAX(PGV2,PGV3)
         PMAX
      #end
   END
   STRU SENSOR NAME 'QSTPASG1'
      #begin INST
         QSTPASG = 0.
         PMAXG   = BASE : 'SENSOR' 'PMAXG1'   : 'value'
         P1TPASG = BASE : 'SENSOR' 'P1TPASG'  : 'value'
         P2TPASG = BASE : 'SENSOR' 'P2TPASG'  : 'value'
         Q1TPASG = BASE : 'SENSOR' 'Q1TPASG'  : 'value'
         Q2TPASG = BASE : 'SENSOR' 'Q2TPASG'  : 'value'
         TPASG   = BASE : 'SENSOR' 'TPASG1'  : 'value'
         IFTHEN (TPASG == 1.)
            A = (Q2TPASG-Q1TPASG)/(P2TPASG-P1TPASG)
            B = Q2TPASG-A*P2TPASG
            QSTPASG = A*PMAXG + B
            ENDIF
         QSTPASG
      #end
   END
   STRU SENSOR NAME 'QSTPASG2'
      #begin INST
         PMAXG   = BASE : 'SENSOR' 'PMAXG2'   : 'value'
         P1TPASG = BASE : 'SENSOR' 'P1TPASG'  : 'value'
         P2TPASG = BASE : 'SENSOR' 'P2TPASG'  : 'value'
         Q1TPASG = BASE : 'SENSOR' 'Q1TPASG'  : 'value'
         Q2TPASG = BASE : 'SENSOR' 'Q2TPASG'  : 'value'
         TPASG   = BASE : 'SENSOR' 'TPASG2'   : 'value'
         QSTPASG = 0.
         IFTHEN (TPASG == 1.)
            A = (Q2TPASG-Q1TPASG)/(P2TPASG-P1TPASG)
            B = Q2TPASG-A*P2TPASG
            QSTPASG = A*PMAXG + B
         ENDIF
         QSTPASG
      #end
   END
   STRU SENSOR NAME 'QSTPSGV1'
      #begin INST
         QSTP = 0.
         QSTPASG  = BASE : 'SENSOR' 'QSTPASG1' : 'value'
         PGV1     = BASE : 'SENSOR' 'P_SG1'    : 'value'
         PGV4     = BASE : 'SENSOR' 'P_SG4'    : 'value'
         PMTPASG = BASE : 'SENSOR' 'PM_TPASG' : 'value'
         IVGV1 = BASE : 'SENSOR' 'IV_GV1'  : 'value'
         IVGV4 = BASE : 'SENSOR' 'IV_GV4'  : 'value'
         IF (IVGV1 == 1. ) PGV1 = 0.
         IF (IVGV4 == 1. ) PGV4 = 0.
         IF ((PGV1 > PMTPASG) && (PGV4 > PMTPASG)) QSTP = QSTPASG*PGV1/(PGV1+PGV4)
         IF ((PGV1 > PMTPASG) && (PGV4 < PMTPASG)) QSTP = QSTPASG
         QSTP
      #end
   END
   STRU SENSOR NAME 'QSTPSGV4'
      #begin INST
         QSTP = 0.
         QSTPASG  = BASE : 'SENSOR' 'QSTPASG1' : 'value'
         PGV1     = BASE : 'SENSOR' 'P_SG1'    : 'value'
         PGV4     = BASE : 'SENSOR' 'P_SG4'    : 'value'
         PMTPASG = BASE : 'SENSOR' 'PM_TPASG' : 'value'
         IVGV1 = BASE : 'SENSOR' 'IV_GV1'  : 'value'
         IVGV4 = BASE : 'SENSOR' 'IV_GV4'  : 'value'
         IF (IVGV1 == 1. ) PGV1 = 0.
         IF (IVGV4 == 1. ) PGV4 = 0.
         IF ((PGV1 > PMTPASG) && (PGV4 > PMTPASG)) QSTP = QSTPASG*PGV4/(PGV1+PGV4)
         IF ((PGV1 < PMTPASG) && (PGV4 > PMTPASG)) QSTP = QSTPASG
         QSTP
      #end
   END
   STRU SENSOR NAME 'QSTPSGV2'
      #begin INST
         QSTP = 0.
         QSTPASG  = BASE : 'SENSOR' 'QSTPASG2' : 'value'
         PGV2     = BASE : 'SENSOR' 'P_SG2'    : 'value'
         PGV3     = BASE : 'SENSOR' 'P_SG3'    : 'value'
         PMTPASG = BASE : 'SENSOR' 'PM_TPASG' : 'value'
         IVGV2 = BASE : 'SENSOR' 'IV_GV2'  : 'value'
         IVGV3 = BASE : 'SENSOR' 'IV_GV3'  : 'value'
         IF (IVGV2 == 1. ) PGV2 = 0.
         IF (IVGV3 == 1. ) PGV3 = 0.
         IF ((PGV2 > PMTPASG) && (PGV3 > PMTPASG)) QSTP = QSTPASG*PGV2/(PGV2+PGV3)
         IF ((PGV2 > PMTPASG) && (PGV3 < PMTPASG)) QSTP = QSTPASG
         QSTP
      #end
   END
   STRU SENSOR NAME 'QSTPSGV3'
      #begin INST
         QSTP = 0.
         QSTPASG  = BASE : 'SENSOR' 'QSTPASG2' : 'value'
         PGV2     = BASE : 'SENSOR' 'P_SG2'    : 'value'
         PGV3     = BASE : 'SENSOR' 'P_SG3'    : 'value'
         PMTPASG = BASE : 'SENSOR' 'PM_TPASG' : 'value'
         IVGV2 = BASE : 'SENSOR' 'IV_GV2'  : 'value'
         IVGV3 = BASE : 'SENSOR' 'IV_GV3'  : 'value'
         IF (IVGV2 == 1. ) PGV2 = 0.
         IF (IVGV3 == 1. ) PGV3 = 0.
         IF ((PGV2 > PMTPASG) && (PGV3 > PMTPASG)) QSTP = QSTPASG*PGV3/(PGV2+PGV3)
         IF ((PGV2 < PMTPASG) && (PGV3 > PMTPASG)) QSTP = QSTPASG
         QSTP
      #end
   END
   STRU EVENT  COND "TPASG1 == 1."
      STRU ACTI TITL "A: OPENING STEAM RACKING FOR SG1" PATH "BASE:CONNECTI (TPASGGV1)" VAR 'STAT' VALU 'ON' END
      STRU ACTI TITL "A: OPENING STEAM RACKING FOR SG4" PATH "BASE:CONNECTI (TPASGGV4)" VAR 'STAT' VALU 'ON' END
   END
   STRU EVENT COND "TPASG2 == 1."
      STRU ACTI TITL "A: OPENING STEAM RACKING FOR SG2" PATH "BASE:CONNECTI (TPASGGV2)" VAR 'STAT' VALU 'ON' END
      STRU ACTI TITL "A: OPENING STEAM RACKING FOR SG3" PATH "BASE:CONNECTI (TPASGGV3)" VAR 'STAT' VALU 'ON' END
   END
   STRU EVENT COND "TPASG1==0."
      STRU ACTI TITL "A: CLOSING STEAM RACKING FOR SG1" PATH "BASE:CONNECTI (TPASGGV1)" VAR 'STAT' VALU 'OFF' END
      STRU ACTI TITL "A: CLOSING STEAM RACKING FOR SG4" PATH "BASE:CONNECTI (TPASGGV4)" VAR 'STAT' VALU 'OFF' END
   END
   STRU EVENT COND "TPASG2==0."
      STRU ACTI TITL "A: CLOSING STEAM RACKING FOR SG2" PATH "BASE:CONNECTI (TPASGGV2)" VAR 'STAT' VALU 'OFF' END
      STRU ACTI TITL "A: CLOSING STEAM RACKING FOR SG3" PATH "BASE:CONNECTI (TPASGGV3)" VAR 'STAT' VALU 'OFF' END
   END
   STRU EVENT  COND "(TIME > T_ASG)"
      STRU ACTI
         #begin INST
            qvsteam1 = BASE : 'CONNECTI' 'TPASGGV1':'SOURCE':'FLOW'
            qvsteam1(2) <- -QSTPSGV1
            qvsteam1(6) <- -QSTPSGV1
            qvsteam2 = BASE : 'CONNECTI' 'TPASGGV2':'SOURCE':'FLOW'
            qvsteam2(2) <- -QSTPSGV2
            qvsteam2(6) <- -QSTPSGV2
            qvsteam3 = BASE : 'CONNECTI' 'TPASGGV3':'SOURCE':'FLOW'
            qvsteam3(2) <- -QSTPSGV3
            qvsteam3(6) <- -QSTPSGV3
            qvsteam4 = BASE : 'CONNECTI' 'TPASGGV4':'SOURCE':'FLOW'
            qvsteam4(2) <- -QSTPSGV4
            qvsteam4(6) <- -QSTPSGV4
         #end
      END
   END
   STRU EVENT   COND "(TIME > T_ASG)  && ((X_TPS1<0.5) || (X_TPS4<0.5))"
      STRU ACTI SENSOR I_TPASG1  TITL "A: LOOSING TURBINE DRIVEN PUMP OF AFW SG1/4: WATER IN STEAM LINE" INST "I_TPASG1 <- 0." END
   END
   STRU EVENT  COND "(TIME > T_ASG) && ((X_TPS2<0.5) || (X_TPS3<0.5))"
      STRU ACTI SENSOR I_TPASG2  TITL "A: LOOSING TURBINE DRIVEN PUMP OF AFW SG2/3: WATER IN STEAM LINE" INST "I_TPASG2 <- 0." END
   END
   STRU EVENT  COND "(TIME > T_ASG)  && (PMAXG1<PM_TPASG)"
      STRU ACTI SENSOR TPASG1  TITL "A: STOPING TURBINE DRIVEN PUMP OF AFW SG1/4: LOW PRESSURE IN SG"  INST "TPASG1 <- 0." END
      STRU ACTI SENSOR I_TPASG1  TITL "A: LOOSING TURBINE DRIVEN PUMP OF AFW SG1/4: LOW PRESSURE IN SG" INST "I_TPASG1 <- 0." END
   END
   STRU EVENT  COND "(TIME > T_ASG)  && (PMAXG2<PM_TPASG)"
      STRU ACTI SENSOR TPASG2  TITL "A: STOPING TURBINE DRIVEN PUMP OF AFW SG2/3: LOW PRESSURE IN SG" INST "TPASG2 <- 0." END
      STRU ACTI SENSOR I_TPASG2  TITL "A: LOOSING TURBINE DRIVEN PUMP OF AFW SG2/3: LOW PRESSURE IN SG" INST "I_TPASG2 <- 0." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT  COND "((I_TPASG1 == 0.) && (I_MPASG1 == 0.))"
      STRU ACTI SENSOR I_ASG1  TITL "A: NO WATER INJECTION IN SG1" INST "I_ASG1 <- 100." END
      STRU ACTI SENSOR I_ASG4  TITL "A: NO WATER INJECTION IN SG4" INST "I_ASG4 <- 100." END
   END
   STRU EVENT  COND "((I_TPASG2 == 0.) && (I_MPASG2 == 0.))"
      STRU ACTI SENSOR I_ASG2  TITL "A: NO WATER INJECTION IN SG2" INST "I_ASG2 <- 100." END
      STRU ACTI SENSOR I_ASG3  TITL "A: NO WATER INJECTION IN SG3" INST "I_ASG3 <- 100." END
   END
   STRU EVENT  COND "((I_TPASG2 == 0.) && (I_MPASG2 == 0.) && (I_TPASG1 == 0.) && (I_MPASG1 == 0.))"
      STRU ACTI SENSOR I_ASG  TITL "A: AFW UNAVAILABLE" INST "I_ASG <- 100." END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW TEMPORARILY UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "((PMAXG1<PM_TPASG) && (I_MPASG1 == 0.))"
      STRU EVENT COND "I_ASG1<100."
         STRU ACTI SENSOR I_ASG1  TITL "A: TEMPORARILY NO WATER INJECTION IN SG1" INST "I_ASG1 <- 101." END
      END
      STRU EVENT COND "I_ASG4<100."
         STRU ACTI SENSOR I_ASG4  TITL "A: TEMPORARILY NO WATER INJECTION IN SG4" INST "I_ASG4 <- 101." END
      END
   END
   STRU EVENT COND "((PMAXG2<PM_TPASG) && (I_MPASG2 == 0.))"
      STRU EVENT COND "I_ASG2<100."
         STRU ACTI SENSOR I_ASG2  TITL "A: TEMPORARILY NO WATER INJECTION IN SG2" INST "I_ASG2 <- 101." END
      END
      STRU EVENT COND "I_ASG3<100."
         STRU ACTI SENSOR I_ASG3  TITL "A: TEMPORARILY NO WATER INJECTION IN SG3" INST "I_ASG3 <- 101." END
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "((I_TPASG1 == 1.) && (I_MPASG1 == 0.))"
      STRU EVENT COND "(I_ASG1==101.)&&(PMAXG1>PM_TPASG)"
         STRU ACTI SENSOR I_ASG1  TITL "A: TURBINE DRIVEN PUMP OF SG1 AVAILABLE AGAIN" INST "I_ASG1 <- 0." END
      END
      STRU EVENT COND "(I_ASG4==101.)&&(PMAXG1>PM_TPASG)"
         STRU ACTI SENSOR I_ASG4  TITL "A: TURBINE DRIVEN PUMP OF SG4 AVAILABLE AGAIN" INST "I_ASG4 <- 0." END
      END
   END
   STRU EVENT COND "((I_TPASG2 == 1.) && (I_MPASG2 == 0.))"
      STRU EVENT COND "(I_ASG2==101.)&&(PMAXG2>PM_TPASG)"
         STRU ACTI SENSOR I_ASG2  TITL "A: TURBINE DRIVEN PUMP OF SG2 AVAILABLE AGAIN" INST "I_ASG2 <- 0." END
      END
      STRU EVENT COND "(I_ASG3==101.)&&(PMAXG2>PM_TPASG)"
         STRU ACTI SENSOR I_ASG3  TITL "A: TURBINE DRIVEN PUMP OF SG3 AVAILABLE AGAIN" INST "I_ASG3 <- 0." END
      END
   END
!.......................................................................................................................
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW SIGNAL
   !       ASG_S = 0 : no AFW signal
   !       ASG_S = 1 : AFW signal
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'ASG_S'    value  0.        END
   STRU SENSOR NAME 'T_ASG'    value  1.D9      END
   STRU SENSOR NAME 'TF_ASG'   value  1.D9      END
   STRU SENSOR NAME 'DTDASG'   value  (dtdasg)  END
   STRU SENSOR NAME 'DTFDASG'  value  (dtfdasg) END
   STRU SENSOR NAME 'TREGASG'  value  0.        END
   STRU SENSOR NAME 'DTREGASG' value 120.      END
   !--------------------------------------------------------------------------------------------------------------------
   ! I_ASG AFW AVAILABLE FLAG
   !    I_ASG = 0.   : AFW AVAILABLE
   !    I_ASG = 100. : AFW UNAVAILABLE
   !    I_ASG = 101. : AFW TEMPORARILY UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_ASG' value 0. END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! I_ASGi AFW AVAILABLE FLAG
   !    I_ASGi = 0.   : ASG AVAILABLE SGi
   !    I_ASGi = 100. : AFW UNAVAILABLE SGi
   !    I_ASGi = 101. : AFW TEMPORARILY UNAVAILABLE SGi
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('I_ASG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi AFW OPERATING FLAG
   !    ASGi = 0. : Q= 0 kg/s
   !    ASGi = 1. : MAXIMUM FLOW RATE (QMASGGVi)
   !    ASGi = 2. : SGi LEVEL REGULATION (NC_ASGi)
   !    ASGi = 3. : MANUAL FLOW RATE (QC_ASGi)
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('ASG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MASGi AFW PUMP OPERATING FLAG SGi
   !    MASGi = 0.   : 0 ASG pump in use SGi
   !    MASGi = 1.   : 1 ASG pump in use SGi
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('MASG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! MASGi AFW TURBINE DRIVEN PUMP OPERATING FLAG SGi
   !    TASGi = 0.   : 0 ASG turbine driven pump in use SGi
   !    TASGi = 1.   : 1 ASG turbine driven pump in use SGi
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('TASG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi AFW MAXIMUM FLOW
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('QMASGGV'//CHAR(i))) value 0. END
   STRU SENSOR NAME (WORD('ML0GV'//CHAR(i)))  value 0. END
#enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi AFW MAXIMUM FLOW CALCULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               QM = 0.
               g  = WORD('I_ASG'//CHAR(i))
               IASG = BASE:'SENSOR' g: 'value'
               g  = WORD('IE_GV'//CHAR(i))
               IE_GV = BASE:'SENSOR' g: 'value'
               g  = WORD('MASG'//CHAR(i))
               MASG = BASE:'SENSOR' g: 'value'
               g  = WORD('TASG'//CHAR(i))
               TASG = BASE:'SENSOR' g: 'value'
               IF ((IASG == 0.) && (IE_GV == 0.)) QM = FDASG * (TASG * QMTPASG + MASG * QMMPASG)
               g  = WORD('QMASGGV'//CHAR(i))
               ROOTBASE(g) <- QM
            ENDDO
            DELETE nloop
            DELETE g
            DELETE QM
            DELETE TASG
            DELETE MASG
            DELETE IASG
            DELETE IE_GV
            DELETE i
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW AVAIBILITY
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "( I_ASG == 100.)"
      STRU ACTI
         #begin INST
             nloop = BASE:'DESIGN' : 'RCS':'nloop'
             DO i 1 nloop
               g  = WORD('I_ASG'//CHAR(i))
               ROOTBASE(g) <- 100.
             ENDDO
             I_MPASG1 <- 0.
             I_MPASG2 <- 0.
             I_TPASG1 <- 0.
             I_TPASG2 <- 0.
             DELETE nloop
             DELETE g
             DELETE i
         #end
      END
   END
   STRU EVENT COND "( TIME > 0.)"
      STRU ACTI
         #begin INST
            IASG = 0.
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            DO i 1 nloop
               g  = WORD('I_ASG'//CHAR(i))
               IAS = BASE:'SENSOR' g: 'value'
               IASG = IASG + IAS
            ENDDO
            IASGM = 100. * FLOAT(nloop)
            IF (IASG == IASGM)  I_ASG <-100.
            DELETE nloop
            DELETE g
            DELETE IAS
            DELETE IASG
            DELETE IASGM
            DELETE i
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW STARTING
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
     STRU ACTI
        #begin INST
           FD = (TIME - T_ASG)/(DTFDASG-DTDASG)
           IF (FD > 1.) FD = 1.
           IF (FD < 0.) FD = 0.
           FDASG <- FD
           DELETE FD
        #end
      END
   END
   STRU EVENT TYPE 'ONCE' COND "( ASG_S == 1.)"
      TITL ("A: AFW STARTED IN LEVEL REGULATION (NR) AT "//CHAR(NR_SG1))
      STRU ACTI
         #begin INST
             T_ASG <- TIME + DTDASG
             TF_ASG <- TIME + DTFDASG
             MPASG1 <- I_MPASG1
             MPASG2 <- I_MPASG2
             TPASG1 <- I_TPASG1
             TPASG2 <- I_TPASG2
             IF (PMAXG1<PM_TPASG) TPASG1 <- 0.
             IF (PMAXG2<PM_TPASG) TPASG2 <- 0.
             nloop = BASE:'DESIGN' : 'RCS':'nloop'
             DO i 1 nloop
               g  = WORD('ASG'//CHAR(i))
               ROOTBASE(g) <- 2.
            ENDDO
            DELETE nloop
            DELETE g
            DELETE i
         #end
      END
   END
!.......................................................................................................................
   STRU EVENT COND "(TIME >= 0.)"
     STRU ACTI
        #begin INST
           MASG1  <- MIN(MPASG1,I_MPASG1)
           MASG2  <- MIN(MPASG2,I_MPASG2)
           MASG3  <- MIN(MPASG2,I_MPASG2)
           MASG4  <- MIN(MPASG1,I_MPASG1)
           MPASG1 <- MIN(MPASG1,I_MPASG1)
           MPASG2 <- MIN(MPASG2,I_MPASG2)
           TASG1  <- MIN(TPASG1,I_TPASG1)
           TASG2  <- MIN(TPASG2,I_TPASG2)
           IF (PMAXG1<PM_TPASG) TPASG1 <- 0.
           IF (PMAXG2<PM_TPASG) TPASG2 <- 0.
           TASG3  <- MIN(TPASG2,I_TPASG2)
           TASG4  <- MIN(TPASG1,I_TPASG1)
           TPASG1 <- MIN(TPASG1,I_TPASG1)
           TPASG2 <- MIN(TPASG2,I_TPASG2)
        #end
      END
   END
!.......................................................................................................................
STRU EVENT COND "(TIME >= 0.)"
   STRU ACTI
      #begin INST
          nloop = BASE:'DESIGN' : 'RCS':'nloop'
          DO i 1 nloop
             flow = 0.
             g  = WORD('I_ASG'//CHAR(i))
             IASG = BASE:'SENSOR' g: 'value'
             g  = WORD('IE_GV'//CHAR(i))
             IE_GV = BASE:'SENSOR' g: 'value'
             g  = WORD('ASG'//CHAR(i))
             ASGI = BASE:'SENSOR' g: 'value'
             g  = WORD('QMASGGV'//CHAR(i))
             QMASGGV = BASE:'SENSOR' g: 'value'
             g  = WORD('QC_ASG'//CHAR(i))
             QCASG = BASE:'SENSOR' g: 'value'
             g  = WORD('NR_SG'//CHAR(i))
             NGV = BASE:'SENSOR' g: 'value'
             g  = WORD('NC_ASG'//CHAR(i))
             NCGVASG = BASE:'SENSOR' g: 'value'
             g  = WORD('QL_AFW'//CHAR(i))
             QASG = BASE:'SENSOR' g: 'value'
             g  = WORD('QS_SG'//CHAR(i))
             QSGV = BASE:'SENSOR' g: 'value'
             g  = WORD('ML_GV'//CHAR(i))
             ML_GV = BASE:'SENSOR' g: 'value'
             g  = WORD('ML0GV'//CHAR(i))
             ML0GV = BASE:'SENSOR' g: 'value'
             flow = QASG
             IFTHEN (IASG == 0.)
                IF (ASGI == 0.) flow = 0.
                IF (ASGI == 1.) flow = QMASGGV
                IFTHEN ((ASGI == 2.) && (TIME > TREGASG))
                   GAI1 = 0.5
                   GAI2 = 0.01
                   maxdfl = 1.
                   ECART1 = NCGVASG - NGV
                   ECART2 = QSGV - QASG
                   ECART3 = ML_GV - ML0GV
                   IFTHEN ((ECART1 > 0. && ECART3 < 0.) || (ECART1 < 0. && ECART3 > 0.))
                      dflow = GAI1 * ECART1
                      IFTHEN  ( ABS(dflow) < maxdfl)
                         flow  = QASG + dflow
                      ELSE
                         flow = QASG + maxdfl*dflow/ABS(dflow)
                      ENDIF
                   ENDIF
                   IF (flow <0.) flow = 0.
                   IF (flow > QMASGGV) flow = QMASGGV
                ENDIF
                IF (ASGI == 3.) flow = MIN(QCASG,QMASGGV)
             ENDIF
             IF (IASG == 100.) flow = 0.
             IF (IASG == 101.) flow = 0.
             pumpname = WORD('ASG_GV'//CHAR(i))
             pump = BASE : 'SYSTEMS' 1 : 'PUMP' pumpname
             pump('FLOW',1) <- flow
          ENDDO
          DELETE nloop
          DELETE g
          DELETE IASG
          DELETE IE_GV
          DELETE ASGI
          DELETE QMASGGV
          DELETE QCASG
          DELETE NGV
          DELETE NCGVASG
          DELETE QSGV
          DELETE QASG
          DELETE i
          DELETE dflow
          DELETE maxdfl
          DELETE pump
          DELETE pumpname
          DELETE GAI1
          DELETE GAI2
          DELETE flow
          DELETE ECART1
          DELETE ECART2
          DELETE NCGV
      #end
   END
END
STRU EVENT COND "(TIME > TREGASG)"
     STRU ACTI INST "TREGASG <- TIME + DTREGASG" END
     STRU ACTI INST "ML0GV1 <- ML_GV1" END
     STRU ACTI INST "ML0GV2 <- ML_GV2" END
     STRU ACTI INST "ML0GV3 <- ML_GV3" END
     STRU ACTI INST "ML0GV4 <- ML_GV4" END
END
!=======================================================================================================================
! AFW TANK
!=======================================================================================================================
  !----------------------------------------------------------------------------
  ! FLAG DISPONIBILITE DE LA REALIMENTATION DE LA BACHE ASG
  !    I_RBAASG = 0.   : Realimentation de la bache ASG disponible
  !    I_RBAASG = 100. : Realimentation de la bache ASG indisponible
  !----------------------------------------------------------------------------
  STRU SENSOR NAME 'I_RBAASG' value 0. END
  !----------------------------------------------------------------------------
  ! FLAG ETAT DE LA BACHE ASG
  !    RBAASG = 0.   : Bache ASG non realimentee
  !    RBAASG = 1.   : Bache ASG realimentee
  !----------------------------------------------------------------------------
  STRU SENSOR NAME 'RBAASG' value 0. END
  STRU SENSOR NAME 'VASGMAX1' value (vasgmax1) END
  STRU SENSOR NAME 'VASGMIN1' value (vasgmin1) END
  STRU SENSOR NAME 'VASGMIN2' value (vasgmin2) END
  STRU SENSOR NAME 'VASGMIN3' value (vasgmin3) END
  STRU SENSOR NAME 'VASGTMOR' value (vasgtmor) END
  !----------------------------------------------------------------------------
  !-   Realimentation de la bache ASG
  !----------------------------------------------------------------------------
  STRU EVENT  COND "(I_RBAASG == 0.) && (RBAASG == 1.) && (V_ASG < VASGMIN1)"
      STRU ACTI TITL "A: REFILL OF AFW TANK" PATH "BASE:SYSTEMS:TANK(ASGBA)" VAR  'VOLU' INST "VASGMAX1" END
      STRU ACTI INST "RBAASG <- 0." END
  END
  !-------------------------------------------------------------------------------
  !-  BACHE ASG VIDE
  !-------------------------------------------------------------------------------
  STRU EVENT COND "(I_ASG == 0.) && (V_ASG < VASGTMOR)"
     STRU ACTI SENSOR 'I_ASG' TITL "EMPTY AFW TANK: AFW UNAVAILABLE" INST "I_ASG <- 100." END
  END
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW ACTUATION ON VERY LOW PRESSURIZER PRESSURE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(P_PRIM < PPZRMIN4) && (TIME > 0.)"
      STRU ACTI SENSOR ASG_S TITL "A: AFW ACTUATION ON VERY LOW PRESSURIZER PRESSURE " INST "ASG_S <- 1." END
   END
!.......................................................................................................................
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   STRU EVENT COND ("(NR_SG"//CHAR(i)//" < NGEMIN2) && (TIME > 0.) && (I_ASG"//CHAR(i)//" < 100.)")
         STRU ACTI SENSOR ASG_S TITL ("A: AFW ACTUATION ON VERY LOW LEVEL SG"//CHAR(i)) INST "ASG_S <- 1." END
   END
#enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! AFW ACTUATION ON MFW LOSS
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT TYPE 'ONCE' COND "(I_ARE == 100.)"
      STRU ACTI SENSOR ASG_S TITL "A: AFW ACTUATION MFW LOSS" INST "ASG_S <- 1." END
   END
!=======================================================================================================================
! SRV (STEAM RELIEF VALVE)
!=======================================================================================================================
   !--------------------------------------------------------------------------------------------------------------------
   ! SRV pressure setpoint
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'DPGCTA'   value (dpgcta) END
   STRU SENSOR NAME 'CREFGCTA' value 0. END
   STRU SENSOR NAME 'MREFGCTA' value 0. END
   STRU SENSOR NAME 'PFCOOL'   value (pfcool) END
   STRU EVENT COND "(CREFGCTA == -56.)"
      STRU ACTI SENSOR MREFGCTA TITL ("A: SG COOLING -56 C/h") INST "MREFGCTA <- CREFGCTA" END
   END
   STRU EVENT COND "(CREFGCTA == -28.)"
      STRU ACTI SENSOR MREFGCTA TITL ("A: SG COOLING -28 C/h") INST "MREFGCTA <- CREFGCTA" END
   END
   STRU EVENT COND "(CREFGCTA == -14.)"
      STRU ACTI SENSOR MREFGCTA TITL ("A: SG COOLING -14 C/h") INST "MREFGCTA <- CREFGCTA" END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTa MANUAL OPENING TIME
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_GCTA' value 1.D09 END
   STRU SENSOR NAME 'DT_GCTA' value 120. END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTa OPERATOR DELAY
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'T_OPGCTA' value 600. END
   !--------------------------------------------------------------------------------------------------------------------
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! SRV pressure setpoint
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('PCGCTA'//CHAR(i))) value (pcgcta) END
   !--------------------------------------------------------------------------------------------------------------------
   ! SRV OPENING
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('PUGCTA'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SRV AVILABILITY
   !   I_GCTAi = 0.    : SGi SRV available
   !   I_GCTAi = 98.   : non manoeuvrable
   !   I_GCTAi = 99.   : SGi SRV UNAVAILABLE locked opened
   !   I_GCTAi = 100.  : SGi SRV UNAVAILABLE locked closed
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('I_GCTA'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi SRV operating flag
   !    GCTAi = 0    : SGi SRV pressure  setpoint
   !    GCTAi = 1    : SGi controled cooling
   !    GCTAi = 2    : SGi Maximum cooling
   !    GCTAi = 3    : SGi Fast cooling
   !    GCTAi = 4.   : SGi cold leg temperature stabilisation
   !    GCTAi = 5.   : GCTa GV fermees
   !    GCTAi = 6.   : GCTa ouverte a un certain pourcentage PUGCTA
   !--------------------------------------------------------------------------------------------------------------------
      STRU SENSOR NAME (WORD('GCTA'//CHAR(i))) value 0. END
      STRU SENSOR NAME (WORD('MGCTA'//CHAR(i))) value 0. END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 0.)")
         STRU ACTI TITL ("A: SRV PRESSURE SET POINT SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 0. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 1.) && (CREFGCTA == -56.)")
         STRU ACTI TITL ("A: CONTROLED COOLING SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 1. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 1.) && (CREFGCTA <> -56.)")
         STRU ACTI TITL ("A: CONTROLED COOLING SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 1. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 2.)")
         STRU ACTI TITL ("A: MAXIMUM COOLING SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 2. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 3.)")
         STRU ACTI TITL ("A: FAST COOLING SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 3. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 4.)")
         STRU ACTI TITL ("A: COLD LEG STABILISATION SG"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 4. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 5.)")
         STRU ACTI TITL ("A: CLOSING OF SRV"//CHAR(i)) PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 5. END
      END
      STRU EVENT COND ("(GCTA"//CHAR(i)//" == 6.)")
         STRU ACTI TITL ("A: SETTING OPENING OF SRV"//CHAR(i)//" TO WANTED VALUE") PATH ("BASE:SENSOR(MGCTA"//CHAR(i)//")") VAR  value VALU 6. END
      END

      STRU EVENT TYPE 'ONCE' COND ("(GCTA"//CHAR(i)//" > 0.)")
         STRU ACTI INST "T_GCTA <- TIME + T_OPGCTA" END
      END
#enddo
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi SRV OPENING CALCULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(TIME >= 0.)"
      STRU ACTI
         #begin INST
            nloop = BASE:'DESIGN' : 'RCS':'nloop'
            a2 = BASE:'DESIGN' : 'RCS':'a2gcta'
            a1 = BASE:'DESIGN' : 'RCS':'a1gcta'
            T = BASE:'SEQUENCE':'STEP'
            TAU = 120.
            dpum = 0.01
            DO i 1 nloop
               g  = WORD('GCTA'//CHAR(i))
               GCTAI = BASE:'SENSOR' g: 'value'
               g  = WORD('I_GCTA'//CHAR(i))
               IGCTA = BASE:'SENSOR' g: 'value'
               g  = WORD('PUGCTA'//CHAR(i))
               pugcta = BASE:'SENSOR' g: 'value'
               g  = WORD('P_STL'//CHAR(i))
               Pstl = BASE:'SENSOR' g: 'value'
               g  = WORD('X_STL'//CHAR(i))
               Xstl = BASE:'SENSOR' g: 'value'
               g  = WORD('PCGCTA'//CHAR(i))
               PCGCTA = BASE:'SENSOR' g: 'value'
               g  = WORD('P_SG'//CHAR(i))
               Pgv = BASE:'SENSOR' g: 'value'
               g  = WORD('PGV_TBF'//CHAR(i))
               Pgvtbf = BASE:'SENSOR' g: 'value'
               IFTHEN (IGCTA == 0.)
                  IFTHEN (GCTAI == 0.)
                     pugcta = pugcta+((Pstl-PCGCTA)/DPGCTA)*((T/TAU)*(1.-Xstl)+Xstl)
                     IF (pugcta > 1.) pugcta = 1.
                     IF (pugcta < 0.) pugcta = 0.
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- pugcta
                  ENDIF
                  IFTHEN ((GCTAI == 1.) && (TIME > T_GCTA))
                     signref = -1.
                     IF (CREFGCTA > 0.) signref = 1.
                     ref = signref * MAX(1.D-9, ABS(CREFGCTA))
                     ecart = (COEF_REF - ref) / ref
                     G = -0.1
                     dpu = G * ecart
                     IF ( dpu > 0.) pugcta = pugcta + MIN(dpu,dpum)
                     IF (pugcta > 1.) pugcta = 1.
                     IF (pugcta < 0.) pugcta = 0.
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- pugcta
                  ENDIF
                  IFTHEN ((GCTAI == 2.) && (TIME > T_GCTA))
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- 1.
                  ENDIF
                  IFTHEN ((GCTAI == 3.) && (TIME > T_GCTA))
                     CREFGCTA <- -56.
                     ref = -56.
                     G = 0.1
                     ecart = (COEF_REF - ref) / ref
                     pugcta = pugcta - G * ecart
                     IF (pugcta > 1.) pugcta = 1.
                     IF (pugcta < 0.) pugcta = 0.
                     IF (Pgv > PFCOOL) pugcta = 1.
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- pugcta
                  ENDIF
                  IFTHEN (GCTAI == 4.)
                     dp = 1.5D5
                     pugcta=(Pstl-Pgvtbf)/dp
                     IF (pugcta > 1.) pugcta = 1.
                     IF (pugcta < 0.) pugcta = 0.
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- pugcta
                  ENDIF
                  IFTHEN (GCTAI == 5.)
                     pugcta=0.
                     g  = WORD('PUGCTA'//CHAR(i))
                     ROOTBASE(g) <- pugcta
                  ENDIF
                  IFTHEN ((GCTAI == 6.) && (TIME > T_GCTA))
                     !Do Nothing given that PUGCTA is set by an event in general_driving.dat
                  ENDIF
                  g  = WORD('PUGCTA'//CHAR(i))
                  pugcta = BASE:'SENSOR' g: 'value'
                  S_GCT = a2*pugcta*pugcta+a1*pugcta
                  vname = WORD('GCTA_'//CHAR(i))
                  valv = BASE : 'SYSTEMS' 1 : 'VALVE' vname
                  valv('Smax',1) <- S_GCT
               ENDIF
               IFTHEN (IGCTA == 98.)
                  PCGCTA = 84.5D5
                  pugcta = pugcta+((Pstl-PCGCTA)/DPGCTA)*((T/TAU)*(1.-Xstl)+Xstl)
                  IF (pugcta > 1.) pugcta = 1.
                  IF (pugcta < 0.) pugcta = 0.
                  g  = WORD('PUGCTA'//CHAR(i))
                  ROOTBASE(g) <- pugcta
                  pugcta = BASE:'SENSOR' g: 'value'
                  S_GCT = a2*pugcta*pugcta+a1*pugcta
                  vname = WORD('GCTA_'//CHAR(i))
                  valv = BASE : 'SYSTEMS' 1 : 'VALVE' vname
                  valv('Smax',1) <- S_GCT
               ENDIF
            ENDDO
            DELETE nloop
            DELETE a2
            DELETE a1
            DELETE T
            DELETE TAU
            DELETE g
            DELETE GCTAI
            DELETE IGCTA
            DELETE Pstl
            DELETE Xstl
            DELETE PCGCTA
            DELETE Pgv
            DELETE Pgvtbf
            DELETE valv
            DELETE vname
            DELETE S_GCT
            DELETE pugcta
            DELETE i
            DELETE signref
            DELETE dp
            DELETE ref
            DELETE G
            DELETE ecart
            DELETE dpu
            DELETE dpum
         #end
      END
   END
   (i=0)
   #do
      (i=i+1)
      #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi SRV UNAVAILABLE locked opened (I_GCTAi = 99.)
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT  COND ("(I_GCTA"//CHAR(i)//" == 99.)")
         STRU ACTI PATH ("BASE:SENSOR(PUGCTA"//CHAR(i)//")") VAR  value VALU 1. END
      END
   !--------------------------------------------------------------------------------------------------------------------
   ! SGi SRV UNAVAILABLE locked closed (I_GCTAi = 100.)
   !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT  COND ("(I_GCTA"//CHAR(i)//" == 100.)")
         STRU ACTI PATH ("BASE:SENSOR(PUGCTA"//CHAR(i)//")") VAR  value VALU 0. END
      END
   #enddo
   STRU EVENT COND "(TIME > T_GCTA)"
     STRU ACTI INST "T_GCTA <- TIME + DT_GCTA" END
   END
!-----------------------------------------------------------------------------------------------------------------------
! GCTC
!-----------------------------------------------------------------------------------------------------------------------
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC Max section
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'SMGCTC' value (smgctc)  END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC OPENING
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PUGCTC' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCT010VV/GCT020VV/31VV/32VV/33VV/41VV/42VV/43VV/51VV/52VV/53VV/61VV/62VV/63VV
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PUGCT010' value 0. END
   STRU SENSOR NAME 'PUGCT020' value 0. END
   STRU SENSOR NAME 'PUGCT031' value 0. END
   STRU SENSOR NAME 'PUGCT032' value 0. END
   STRU SENSOR NAME 'PUGCT033' value 0. END
   STRU SENSOR NAME 'PUGCT041' value 0. END
   STRU SENSOR NAME 'PUGCT042' value 0. END
   STRU SENSOR NAME 'PUGCT043' value 0. END
   STRU SENSOR NAME 'PUGCT051' value 0. END
   STRU SENSOR NAME 'PUGCT052' value 0. END
   STRU SENSOR NAME 'PUGCT053' value 0. END
   STRU SENSOR NAME 'PUGCT061' value 0. END
   STRU SENSOR NAME 'PUGCT062' value 0. END
   STRU SENSOR NAME 'PUGCT063' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC PRESSURE SETPOINT
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'PC_GCTC'  value (pmingctc) END
   STRU SENSOR NAME 'PMINGCTC' value (pmingctc) END
   STRU SENSOR NAME 'PMAXGCTC' value (pmaxgctc) END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC AVAILABILITY
   !    I_GCTC = 0.    : GCTC available
   !    I_GCTC = 100.  : GCTC unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME 'I_GCTC' value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC PRESSURE SETPOINT
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(I_GCTC == 0.)"
     STRU ACTI
        #begin INST
           IF ((TIME-T_AAR < 60.) && (TIME-T_AAR > 0.)) PC_GCTC <- ((PMAXGCTC-PMINGCTC)/60.)*(TIME-T_AAR)+PMINGCTC
           IF (TIME-T_AAR > 60.) PC_GCTC <- PMAXGCTC
        #end
     END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC OPENING CALCULATION
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(I_GCTC == 0.)"
      STRU ACTI
         #begin INST
            dp = 1.5D5
            IF  (P_BARI < PC_GCTC) PUGCTC <- 0.
            IF ((P_BARI >= PC_GCTC) && (P_BARI <= (PC_GCTC + dp))) PUGCTC <- (P_BARI-PC_GCTC)/dp
            IF  (P_BARI > (PC_GCTC+dp)) PUGCTC <- 1.

            valve = BASE:'SYSTEMS':'VALVE' 'GCT010'
            IF (PUGCTC <= 0.0714) PUGCT010 <- 14.*PUGCTC
            IF (PUGCTC > 0.0714) PUGCT010 <- 1.
            valve(Smax,1) <- PUGCT010*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT020'
            IF (PUGCTC <= 0.0714) PUGCT020 <- 0.
            IF (PUGCTC > 0.0714 && PUGCTC <= 0.142) PUGCT020 <- 14.*PUGCTC - 1.
            IF (PUGCTC > 0.142) PUGCT020 <- 1.
            valve(Smax,1) <- PUGCT020*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT031'
            IF (PUGCTC <= 0.0142) PUGCT031 <- 0.
            IF (PUGCTC > 0.0142 && PUGCTC <= 0.285) PUGCT031 <- 7.*PUGCTC - 1.
            IF (PUGCTC > 0.285) PUGCT031 <- 1.
            valve(Smax,1) <- PUGCT031*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT032'
            IF (PUGCTC <= 0.0142) PUGCT032 <- 0.
            IF (PUGCTC > 0.0142 && PUGCTC <= 0.285) PUGCT032 <- 7.*PUGCTC - 1.
            IF (PUGCTC > 0.285) PUGCT032 <- 1.
            valve(Smax,1) <- PUGCT032*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT033'
            IF (PUGCTC <= 0.285) PUGCT033 <- 0.
            IF (PUGCTC > 0.285 && PUGCTC <= 0.428) PUGCT033 <- 7.*PUGCTC - 2.
            IF (PUGCTC > 0.428) PUGCT033 <- 1.
            valve(Smax,1) <- PUGCT033*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT041'
            IF (PUGCTC <= 0.285) PUGCT041 <- 0.
            IF (PUGCTC > 0.285 && PUGCTC <= 0.428) PUGCT041 <- 7.*PUGCTC - 2.
            IF (PUGCTC > 0.428) PUGCT041 <- 1.
            valve(Smax,1) <- PUGCT041*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT042'
            IF (PUGCTC <= 0.428) PUGCT042 <- 0.
            IF (PUGCTC > 0.428 && PUGCTC <= 0.714) PUGCT042 <- 3.5*PUGCTC - 1.5
            IF (PUGCTC > 0.714) PUGCT042 <- 1.
            valve(Smax,1) <- PUGCT042*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT043'
            IF (PUGCTC <= 0.428) PUGCT043 <- 0.
            IF (PUGCTC > 0.428 && PUGCTC <= 0.714) PUGCT043 <- 3.5*PUGCTC - 1.5
            IF (PUGCTC > 0.714) PUGCT043 <- 1.
            valve(Smax,1) <- PUGCT043*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT051'
            IF (PUGCTC <= 0.428) PUGCT051 <- 0.
            IF (PUGCTC > 0.428 && PUGCTC <= 0.714) PUGCT051 <- 3.5*PUGCTC - 1.5
            IF (PUGCTC > 0.714) PUGCT051 <- 1.
            valve(Smax,1) <- PUGCT051*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT052'
            IF (PUGCTC <= 0.428) PUGCT052 <- 0.
            IF (PUGCTC >  0.428 && PUGCTC <= 0.714) PUGCT052 <- 3.5*PUGCTC - 1.5
            IF (PUGCTC >  0.714) PUGCT052 <- 1.
            valve(Smax,1) <- PUGCT052*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT053'
            IF (PUGCTC <= 0.714) PUGCT053 <- 0.
            IF (PUGCTC > 0.714 && PUGCTC < 1.) PUGCT053 <- 3.5*PUGCTC - 2.5
            IF (PUGCTC == 1.) PUGCT053 <- 1.
            valve(Smax,1) <- PUGCT053*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT061'
            IF (PUGCTC <= 0.714) PUGCT061 <- 0.
            IF (PUGCTC > 0.714 && PUGCTC < 1.) PUGCT061 <- 3.5*PUGCTC - 2.5
            IF (PUGCTC == 1.) PUGCT061 <- 1.
            valve(Smax,1) <- PUGCT061*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT062'
            IF (PUGCTC <= 0.714) PUGCT062 <- 0.
            IF (PUGCTC > 0.714 && PUGCTC < 1.) PUGCT062 <- 3.5*PUGCTC - 2.5
            IF (PUGCTC == 1.) PUGCT062 <- 1.
            valve(Smax,1) <- PUGCT062*SMGCTC

            valve = BASE:'SYSTEMS':'VALVE' 'GCT063'
            IF (PUGCTC <= 0.714) PUGCT063 <- 0.
            IF (PUGCTC > 0.714 && PUGCTC < 1.) PUGCT063 <- 3.5*PUGCTC - 2.5
            IF (PUGCTC == 1.) PUGCT063 <- 1.
            valve(Smax,1) <- PUGCT063*SMGCTC
            DELETE valve
            DELETE dp
         #end
      END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU EVENT COND "(I_GCTC == 100.)"
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT010) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT020) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT031) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT032) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT033) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT041) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT042) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT043) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT051) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT052) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT053) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT061) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT062) " VAR Smax VALU 0. END
      STRU ACTI PATH "BASE:SYSTEMS:VALVE(GCT063) " VAR Smax VALU 0. END
   END
   !--------------------------------------------------------------------------------------------------------------------
   ! GCTC UNVAILABLE MSIV CLOSING SIGNAL
   !--------------------------------------------------------------------------------------------------------------------
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   STRU EVENT TYPE 'ONCE' COND ("(ISOV"//CHAR(i)//" == 1.)")
      STRU ACTI SENSOR I_GCTC TITL ("A: GCTC UNVAILABLE CLOSING MSIV SG"//CHAR(i)) INST "I_GCTC <- 100." END
   END
#enddo

!***********************************************************************************************************************
! WATER INJECTION THROUGH PES
!***********************************************************************************************************************
!--------------------------------------------------------------------------------------------------------------------
! Cold and hot legs flag availability
! I_PES_P = 0.   : PES in CL and HL available
! I_PES_P = 1.   : PES in CL and HL unavailable
! I_PES_P = 100. : PES in CL and HL unavailable given that TRUP has been reached
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'I_PES_P' value 0. END
!--------------------------------------------------------------------------------------------------------------------
! Time delay at which injection starts
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'TEMPO_P' value 0. END
!--------------------------------------------------------------------------------------------------------------------
! End time of water injection
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'TENDPESP' value 1.D9 END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! PES IN PRIMARY LEG AVAILABILITY
   !   I_PESPi = 0.    : PESi available
   !   I_PESPi = 100.  : PESi unavailable
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('I_PESP'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! PES IN PRIMARY LEG STATUS
   !   PESPi = 0.    : PESi not in use
   !   PESPi = 1.    : PESi in use
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('PESP'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! Time at which injection starts
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('TPESP'//CHAR(i))) value 1.D9 END
   STRU EVENT COND "(TIME >= 0.)"
      !--------------------------------------------------------------------------------------------------------------------
      ! CASE TRUP HAS BEEN REACHED
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND "(I_PES_P == 1.) || (I_PES_P == 100.)"
         STRU ACTI INST ("I_PESP"//CHAR(i)//" <- 100.") END
      END

      !--------------------------------------------------------------------------------------------------------------------
      ! CASE PES ARE AVAILABLE
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND ("(I_PES_P == 0. && I_PESP"//CHAR(i)//" == 0.)")
         STRU ACTI PATH ("BASE:CONNECTI(PES_CL"//CHAR(i)//")") VAR  'PINJ'
            INST ("BASE :'SENSOR' 'P_SG"//CHAR(i)//"':'value'")
         END
         STRU ACTI PATH ("BASE:CONNECTI(PES_HL"//CHAR(i)//")") VAR  'PINJ'
            INST ("BASE :'SENSOR' 'P_SG"//CHAR(i)//"':'value'")
         END
         STRU EVENT COND ('PESP'//CHAR(i)//" == 1.")
            STRU EVENT COND ("TPESP"//CHAR(i)//" == 1.D9")
               TYPE ONCE
               STRU ACTI INST ("TPESP"//CHAR(i)//" <- TIME+TEMPO_P") END
            END
            STRU EVENT COND ("TIME >= TPESP"//CHAR(i))
               TYPE ONCE
               STRU ACTI PATH ("BASE:CONNECTI(PES_CL"//CHAR(i)//")") TITL("A: STARTING PES in CL"//CHAR(i))
                 VAR  'STAT' VALU 'ON'
               END
               STRU ACTI PATH ("BASE:CONNECTI(PES_HL"//CHAR(i)//")") TITL ("A: STARTING PES in HL"//CHAR(i))
                 VAR  'STAT' VALU 'ON'
               END
               STRU ACTI INST "STEP <- 1." END
            END
            STRU EVENT COND ("TIME >= TENDPESP")
               TYPE ONCE
               STRU ACTI SENSOR (WORD('I_PESP'//CHAR(i))) TITL ("A: PES IN LEG"//CHAR(i)//" IS NOW STOPPED") INST ("I_PESP"//CHAR(i)//" <- 100.") END
            END
         END
      END

      !--------------------------------------------------------------------------------------------------------------------
      ! CASE PES ARE UNAVAILABLE
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND ("(I_PESP"//CHAR(i)//" == 100.)")
         STRU ACTI PATH ("BASE:CONNECTI(PES_CL"//CHAR(i)//")")
            VAR  'STAT' VALU 'OFF'
         END
         STRU ACTI PATH ("BASE:CONNECTI(PES_HL"//CHAR(i)//")")
            VAR  'STAT' VALU 'OFF'
         END
         STRU ACTI SENSOR (WORD('PESP'//CHAR(i))) TITL ("A: PES IN COLD AND HOT LEGS IS "//CHAR(i)//" NOW STOPPED") INST (WORD('PESP'//CHAR(i))//" <- 0.") END
      END
   END
#enddo

STRU EVENT COND "TIME >= TTRUP && (PESP1 == 1 || PESP2 == 1 || PESP3 == 1 || PESP4 == 1)"
   TYPE 'ONCE'
   STRU ACTI SENSOR 'I_PES_P' TITL "A: VESSEL RUPTURE HAS BEEN MET: STOPPING PES IN COLD AND HOT LEGS" INST "I_PES_P <- 100."    END
END
STRU EVENT COND "TIME > 0. && (V_SUMP - VL_SUMP < 500.)"
   TYPE 'ONCE'
   STRU ACTI SENSOR 'I_PES_P' TITL "A: SUMP FULL WITH WATER: STOPPING PES IN COLD AND HOT LEGS" INST "I_PES_P <- 100."    END
END

!--------------------------------------------------------------------------------------------------------------------
! Steam generator flag availability
! I_PES_SG = 0.   : PES in SG available
! I_PES_SG = 1.   : PES in SG unavailable
! I_PES_SG = 100. : PES in SG unavailable given that TRUP has been reached
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'I_PES_SG' value 0. END
!--------------------------------------------------------------------------------------------------------------------
! Time delay at which injection starts
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'TEMPO_SG' value 0.D0 END
!--------------------------------------------------------------------------------------------------------------------
! Ending time of water injection
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'TENDPESS' value 1.D9 END
(i=0)
#do
   (i=i+1)
   #if(i>nloop) #exit
   !--------------------------------------------------------------------------------------------------------------------
   ! PES IN SGi AVILABILITY
   !   I_PESSGi = 0.    : PESi available
   !   I_PESSGi = 100.  : PESi UNAVAILABLE
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('I_PESSG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! PES IN SGi STATUS
   !   PESSGi = 0.    : PESi not in use
   !   PESSGi = 1.    : PESi in use
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('PESSG'//CHAR(i))) value 0. END
   !--------------------------------------------------------------------------------------------------------------------
   ! Time at which injection starts
   !--------------------------------------------------------------------------------------------------------------------
   STRU SENSOR NAME (WORD('TPESSG'//CHAR(i))) value 1.D9 END

   STRU EVENT COND "(TIME >= 0.)"
      !--------------------------------------------------------------------------------------------------------------------
      ! CASE TRUP HAS BEEN REACHED
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND "(I_PES_SG == 1.) || (I_PES_SG == 100.)"
         STRU ACTI INST ("I_PESSG"//CHAR(i)//" <- 100.") END
      END

      !--------------------------------------------------------------------------------------------------------------------
      ! CASE PES ARE AVAILABLE
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND ("(I_PES_SG == 0. && I_PESSG"//CHAR(i)//" == 0.)")
         STRU EVENT COND ('PESSG'//CHAR(i)//" == 1")
            STRU EVENT COND ("TPESSG"//CHAR(i)//" == 1.D9")
               TYPE ONCE
               STRU ACTI INST ("TPESSG"//CHAR(i)//" <- TIME + TEMPO_SG") END
            END
            STRU EVENT COND ("TIME >= TPESSG"//CHAR(i))
               TYPE ONCE
               STRU ACTI PATH ("BASE:CONNECTI(PES_SG"//CHAR(i)//")") TITL ("A: STARTING PES in SG"//CHAR(i))
                 VAR  'STAT' VALU 'ON'
               END
            END
            !Injection at full power under 90 percent WR
            STRU EVENT COND ("TIME >= TPESSG"//CHAR(i)//" && "//WORD('WR_SG'//CHAR(i))//" < 90.")
               STRU ACTI PATH ("BASE:CONNECTI(PES_SG"//CHAR(i)//")") VAR  'STAT' VALU 'ON'
               END
            END
            !Stop injection above 95 percent WR
            STRU EVENT COND ("TIME >= TPESSG"//CHAR(i)//" && "//WORD('WR_SG'//CHAR(i))//" >= 95.")
               STRU ACTI PATH ("BASE:CONNECTI(PES_SG"//CHAR(i)//")") VAR  'STAT' VALU 'OFF'
               END
            END
            STRU EVENT COND ("TIME >= TENDPESS")
               TYPE ONCE
               STRU ACTI SENSOR (WORD('I_PESSG'//CHAR(i))) TITL ("A: INJECTION DURATION DTPESSG HAS BEEN REACHED: PES IN SG "//CHAR(i)//" IS NOW STOPPED") INST ("I_PESSG"//CHAR(i)//" <- 100.") END
            END
         END
      END

      !--------------------------------------------------------------------------------------------------------------------
      ! CASE PES ARE UNAVAILABLE
      !--------------------------------------------------------------------------------------------------------------------
      STRU EVENT COND ("(I_PESSG"//CHAR(i)//" == 100.)")
         STRU ACTI PATH ("BASE:CONNECTI(PES_SG"//CHAR(i)//")")
            VAR  'STAT' VALU 'OFF'
         END
         STRU ACTI INST (WORD('PESSG'//CHAR(i))//" <- 0.") END
      END
   END
#enddo

STRU EVENT COND "TIME >= TTRUP && (PESSG1 == 1 || PESSG2 == 1 || PESSG3 == 1 || PESSG4 == 1)"
   TYPE 'ONCE'
   STRU ACTI SENSOR 'I_PES_SG' TITL "A: VESSEL RUPTURE HAS BEEN MET: PES IN STEAM GENERATORS IS NOW STOPPED" INST "I_PES_SG<- 100." END
END

!***********************************************************************************************************************
! TIME STEP REGULATION
!***********************************************************************************************************************
STRU EVENT COND "(TIME > 0.)"
   STRU ACTI
     #begin INST
         seq = BASE : 'SEQUENCE'
         IF(STEP < seq : 'STEP') seq  'STEP' 1 <- STEP
         IFTHEN (STEP >= 0.5 && STEP <  1. )
            STEP <- STEP + 0.1
         ELSE
            STEP <- 10.
         ENDIF
         DELETE seq
     #end
   END
END
!***********************************************************************************************************************
! CALCULATION STOP
!***********************************************************************************************************************
STRU EVENT TYPE 'ONCE' COND "(TIME > 0.) && (A_CALC == 1.)"
   STRU ACTI TITL "A: CALCULATION STOP" PATH "BASE:SEQUENCE" VAR  'TIMA' INST "BASE:'SEQUENCE':'TIME' + 10." END
END
!***********************************************************************************************************************
!***********************************************************************************************************************
STRU SENSOR NAME 'sectRPN'    value 2.58 END
STRU SENSOR NAME 'DPRPN'
       #begin INST
            DP = 0.
            zz = BASE :'CONTAINM':'ZONE' 'ZAJU'
            IFTHEN (POINTER(zz) > 0)
                P1 = 0.
                P2 = 0.
                ther1 = BASE :'CONTAINM':'ZONE' 'ZAJU' : 'THER'
                ther2 = BASE :'CONTAINM':'ZONE' 'POOL' : 'THER'
                IF (NUMBER('PRES',ther1) <> 0) P1 = ther1 : 'PRES' :0
                IF (NUMBER('PRES',ther2) <> 0) P2 = ther2 : 'PRES' :0
                DP = ABS(P1 - P2)
             ENDIF
             DP
       #end
END

STRU EVENT TYPE 'ONCE'  COND "(TIME>0.) && (DPRPN> 3000.)"
       STRU ACTI
       TITL "Pressure peak in reactor pit larger than 30 mbar => opening gazeous junction at 100% of surface of RPN rooms"
       #begin INST
                base2 = BASE : 'CONTAINM' : 'CONN' 'AT16'
                base2 'SECT' 1 <- sectRPN
       #end
       END
END

!=======================================================================================================================
!= FAN/venting systems
!=======================================================================================================================
!--------------------------------------------------------------------------------------------------------------------
! EDE AVAILABILITY
!       = 0.   Available
!       = 100. Unavailable
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'I_EDE' value 0. END
!--------------------------------------------------------------------------------------------------------------------
! VENTING SYSTEM OPERATING FLAG
!       = 0.   APRP
!       = 2.   HORS SERVICE
!-------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'EDE' value 0. END
STRU EVENT TYPE 'ALWAYS' COND "(I_EDE == 0.)"
   STRU EVENT TYPE 'ALWAYS' COND "(EDE == 0.)"
      STRU ACTI
         #begin INST
             j02 = BASE : 'SYSTEMS': 'FAN' 'NAME' J02F
             j02 ('FLOW' 1) <- 0.11
             j02 ('FILTER' 1) <- 'PRE_THE_I2'
         #end
      END
   END
END
STRU EVENT TYPE 'ALWAYS' COND "(EDE == 2.) || (I_EDE == 100.)"
   STRU ACTI
      #begin INST
          j02 = BASE : 'SYSTEMS': 'FAN' 'NAME' J02F
          j02 ('FLOW' 1) <- 0.
          j02 ('FILTER' 1) <- 'THE1'
          j07 = BASE : 'SYSTEMS': 'FAN' 'NAME' J07F
          j07 ('FILTER' 1) <- 'THE1'
      #end
   END
END
STRUCTURE EVENT TYPE 'ALWAYS' COND "(TIME > 0.)"
   STRU EVENT TYPE 'ALWAYS' COND "(EDE == 0.&& I_EDE == 0.)"
      STRU ACTI
         #begin INST
            j02_c = BASE : 'CONTAINM': 'CONN' 'FANNAME' J02F
            j02_c ('FILTER' 1) <- 'PRE_THE_I2'
         #end
      END
   END
   STRU EVENT TYPE 'ALWAYS' COND "(EDE == 2.) || (I_EDE == 100.)"
      STRU ACTI SENSOR EDE TITL "A: EDE IS STOPPED" INST "EDE <- 2." END
      STRU ACTI
         #begin INST
            j02_c = BASE : 'CONTAINM': 'CONN' 'FANNAME' J02F
            j02_c ('FILTER' 1) <- 'THE1'
            j07_c = BASE : 'CONTAINM': 'CONN' 'FANNAME' J07F
            j07_c ('FILTER' 1) <- 'THE1'
         #end
      END
   END
END

!=======================================================================================================================
!= U5 filter
!=======================================================================================================================
!--------------------------------------------------------------------------------------------------------------------
! I_U5 AVAILABILITY
!       = 0.   Available
!       = 100. Unavailable
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'I_U5' value 0. END
!--------------------------------------------------------------------------------------------------------------------
! U5 STATE
!       = 0.   close
!       = 1. open
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'U5' value 0. END

STRUCTURE EVENT TYPE 'ALWAYS' COND "(TIME > 0.) && I_U5 == 0."
   STRU EVENT TYPE 'ONCE' COND "U5 == 1."
      STRU ACTI
         TITL "A: Opening U5 filter"
         PATH "BASE.'SYSTEMS'.'VALVE'('VALV_U5')"
         VAR  STAT
         VALU 'ON'
      END
   END
END

!=======================================================================================================================
!= SAMG
!=======================================================================================================================
!--------------------------------------------------------------------------------------------------------------------
! SAMG FLAG
!       = 0.   Not in SAMG
!       = 1.   Enter in SAMG
!--------------------------------------------------------------------------------------------------------------------
STRU SENSOR NAME 'SAMG' value 0. END

STRUCTURE EVENT TYPE 'ONCE' COND "(TRIC_C > 1000.) && (SAMG == 0.)"
   STRU ACTI
      SENSOR 'SAMG' TITL "A: TRIC > 1000.C, entering in SAMG" INST "SAMG <- 1."
   END
END
STRUCTURE EVENT TYPE 'ONCE' COND "(DOS_CONT > DOS_REF) && (SAMG == 0.)"
   STRU ACTI
      SENSOR 'SAMG' TITL "A: Containment radiation level higher than limit: entering in SAMG" INST "SAMG <- 1."
   END
END

!----------------------------------------------------------------------------
!-      SENSOR linked to operator actions
!----------------------------------------------------------------------------
STRU SENSOR NAME 'FB_MODE' value 0. END
STRU SENSOR NAME 'SRV1' value 0. END
STRU SENSOR NAME 'SRV2' value 0. END
STRU SENSOR NAME 'PESP' value 0. END
STRU SENSOR NAME 'ENDPESP' value 0. END
STRU SENSOR NAME 'PESSG' value 0. END
STRU SENSOR NAME 'SGTR' value 0. END
STRU SENSOR NAME 'ISOGV2' value 0. END

