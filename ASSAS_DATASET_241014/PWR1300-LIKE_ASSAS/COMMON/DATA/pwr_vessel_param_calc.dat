#anal
!=======================================================================================================================
!  Global properties
!=======================================================================================================================
  eps      = 1.D-3
  zero     = 0.0D0
  one      = 1.0D0
  pi       = 3.1415926535D0
  temproom = 298.0D0
  tempsat  = MDBGET "H2O" "T_sat(P)" corepres  ! Saturation temperature in the core
  templiq  = coretemp                          ! init temperature for liquid
  tempsol  = coretemp                          ! init temperature for solid
  tempgas  = tempsat                           ! init temperature for gas
  vgasinit = 1.0D0                             ! init gas velocity
  alfa0    = 1.0D-5                            ! init void fraction
  TZr_liq  = MDBGET "Zr" "T_liq"
  IF(1-ASSIGNED('errfpsm')) errfpsm=1.D-6      ! tolerance on relative error of FP and SM mass inventory
  IF(1-ASSIGNED('debris')) debris=0            ! enabling or not debris (0=no debris, 1=debris at reflood, 2=maximize the mass of debris)
  IF(1-ASSIGNED('ivr')) ivr=0                  ! IVR strategy is used (0=no IVR; 1=enable external cooling (using BC), LP extension, LP finer discretization)
  IFTHEN (debris == 1) ! If debris=1, check that treflo is defined
    IFTHEN(1-ASSIGNED('treflo'))
      PRINT "When debris=1, the analyzer variable treflo must be set to know when debris can be created."
      PRINT "By default, it is set to 0. in this calculation."
      treflo=0.
    ENDIF
  ENDIF
  IFTHEN (ivr == 1)
    rhosteel = 7.5000000000E+03
  ELSE
    rhosteel = MDBGET "SSTEEL" "rho_s(T)" temproom
  ENDIF
IF ((typreac == 900)||(typreac == 1300)||(typreac == 1450)) nchan = nchancore + 2
IF (typreac == 1600)                     nchan = nchancore + 3
!=======================================================================================================================
IFTHEN(1-ASSIGNED('asseweig'))
   asseweig = SI1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core)
   DO k 1 nchancor
      naf = 0
      nf  = 0
      IF (k==1) nf = 1
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) naf = naf + 1
         ENDDO
      ENDDO
      naf = 4*naf + nf
      asseweig k <- (naf)
   ENDDO
ENDIF
!=======================================================================================================================
IFTHEN(1-ASSIGNED('heatfact'))
   heatfact = SR1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core) 
   DO k 1 nchancor
      hfa = 0.
      hf  = 0.
      IF (k==1)  hf = (pow_rad: 1 1)
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) hfa = hfa + (pow_rad: i j)
         ENDDO
      ENDDO
      hfa = 4.*hfa + hf
      hfa = hfa / (asseweig: k)
      heatfact k <- (hfa)
   ENDDO
ENDIF
!=======================================================================================================================
IFTHEN(1-ASSIGNED('grpNweig'))
   grpNweig = SI1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core) 
   DO k 1 nchancor
      naf = 0
      nf  = 0
      IF (k==1) nf = 1 * (rd_bcrod: 1 1)
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) naf = naf + (rd_bcrod: i j)
         ENDDO
      ENDDO
      naf = 4*naf + nf
      grpNweig k <- (naf)
   ENDDO
ENDIF
!=======================================================================================================================
IFTHEN(1-ASSIGNED('grpGweig'))
   grpGweig = SI1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core) 
   DO k 1 nchancor
      naf = 0
      nf  = 0
      IF (k==1) nf = 1 * (rd_gcrod: 1 1)
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) naf = naf + (rd_gcrod: i j)
         ENDDO
      ENDDO
      naf = 4*naf + nf
      grpGweig k <- (naf)
   ENDDO
ENDIF
!=======================================================================================================================
IFTHEN(1-ASSIGNED('grpHweig'))
   grpHweig = SI1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core) 
   IFTHEN(1-ASSIGNED('rd_hcrod'))
   grpHnc = 0
   grpHns = 0
   rd_hcrod = SI2       
      DO i 1 n1rd
         DO j 1 n2rd
            (rd_hcrod i j) <- 0
         ENDDO
      ENDDO
   ENDIF
   DO k 1 nchancor
      naf = 0
      nf  = 0
      IF (k==1) nf = 1 * (rd_hcrod: 1 1)
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) naf = naf + (rd_hcrod: i j)
         ENDDO
      ENDDO
      naf = 4*naf + nf
      grpHweig k <- (naf)      
   ENDDO
ENDIF
!=======================================================================================================================
IFTHEN(1-ASSIGNED('coluweig'))
   coluweig = SI1 1 
   n1rd = NUMBER(1,rd_core)
   n2rd = NUMBER(2,rd_core)
   IFTHEN(1-ASSIGNED('rd_sccol'))
       rd_sccol = SI2       
       DO i 1 n1rd
          DO j 1 n2rd
             (rd_sccol  i j )<- 0
          ENDDO
       ENDDO
   ENDIF 
   DO k 1 nchancor
      naf = 0
      nf  = 0
      IF (k==1) nf = 1 * (rd_sccol: 1 1)
      DO i 2 n1rd
         DO j 1 n2rd
            IF ((rd_core: i j) == k) naf = naf + (rd_sccol: i j)
         ENDDO
      ENDDO
      naf = 4*naf + nf
      coluweig k <- (naf)
   ENDDO
ENDIF
!=======================================================================================================================
!  LOWER PLENUM
!=======================================================================================================================
  lowemate = 'SSTEEL'
  lowethi1 = SR1
  lowerint = SR1
  lowezint = SR1

  ! LP axial meshing is divided in 3 regions
  ! Larges meshes at the bottom
  DO i 0 3    
    lowethi1 0 <- lowethic
    lowezint 0 <- loweheig       * SIN(pi/2.0D0*(i/16.0 - 1.0))
    teta =  pi/2.0D0*(i/16.0 - 1.0)
    lowerint 0 <- vessdint/2.0D0 * COS(teta)
  ENDDO
! Finer meshes at mid-height
  DO i 0 17
    j=i+7
    teta =  pi/2.0D0*(j/32.0 - 1.0)
    lowethi1 0 <- lowethic
    lowezint 0 <- loweheig       *SIN(teta)
    lowerint 0 <- vessdint/2.0D0 * COS(teta)
  ENDDO
! Very fine meshes at the top of LP
  DO i 0 14
    j = i + 50
    teta =  pi/2.0D0*(j/64.0 - 1.0)
    lowezint 0 <- loweheig       *SIN(pi/2.0D0*(j/64.0 - 1.0))
    lowerint 0 <- vessdint/2.0D0 * COS(teta)
    IFTHEN (j<64)
    lowethi1 0 <- lowethic
    ELSE
    lowethi1 0 <- vessthic
    ENDIF
  ENDDO   
  lowezmax = MAX(lowezint)
  lowezmin = MIN(lowezint)

  ! LP thickness meshing 
  IFTHEN(ivr == 1) ! fines non regular thickness meshing for IVR applications
    lowedsct=SR1 0. REGU 4 0.7 REGU 4 0.9 REGU 5 1. TERM
    lowemesr = SIZE(lowedsct)-1
  ELSE
    lowemesr = 10
  ENDIF
!=======================================================================================================================
!  Structures in LOWER PLENUM
!=======================================================================================================================
lstrmate = 'SSTEEL'
lstrzmin = lowezmax - lstrheig
lstrzmax = lowezmax
lstrdscz = 4
!=======================================================================================================================
!  SUPPORT CORE PLATE
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   supczmin = lowezmax
   supczmax = supczmin + supcthic
   supcz2   = supczmin + supcthic/2.
ENDIF
!=======================================================================================================================
!  SUPPORT CORE COLUMNS
!=======================================================================================================================
!-----------------------------------------------------------------------------------------------------------------------
! DEFAULT VALUE
!-----------------------------------------------------------------------------------------------------------------------
IF (1-ASSIGNED('coludint')) coludint = zero
IF (1-ASSIGNED('coludext')) coludext = zero  
IF (1-ASSIGNED('coluheig')) coluheig = zero 
!-----------------------------------------------------------------------------------------------------------------------
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   coluzmin = supczmax
   coluzmax = coluzmin + coluheig
   coluname = SC1
   DO i 1 nchancore
      coluname i <- WORD('COLU'//CHAR(i))
   ENDDO
ENDIF
!=======================================================================================================================
!  PLATE at LOWER CORE
!=======================================================================================================================
!-----------------------------------------------------------------------------------------------------------------------
! DEFAULT VALUE
!-----------------------------------------------------------------------------------------------------------------------
IF (1-ASSIGNED('pllodhol'))  pllodhol = zero
IF (1-ASSIGNED('pllofsho'))  pllofsho = zero
IF (1-ASSIGNED('pllothic'))  pllothic = zero
!-----------------------------------------------------------------------------------------------------------------------
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
  pllozmin = coluzmax
ENDIF
IFTHEN (typreac == 1600)
  pllozmin = lowezmax
ENDIF
pllozmax = pllozmin + pllothic
!=======================================================================================================================
!  PLATE + NOZZLES at LOWER CORE : nozzles are gathered to the lower plate -> equivalent thickness
!=======================================================================================================================
pnlodhol = pllodhol
pnlofsho = pllofsho
nozzleadapt = zero
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
  pnlozmin = coluzmax
ENDIF
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
IF (typreac == 1600) nozzleadapt =4.0D0*bonomass*SUM(asseweig)/((barrdint*barrdint)*pi*rhosteel*(one-pnlofsho))
  pnlothic = pllothic +  nozzleadapt
IFTHEN (typreac == 1600)
  pnlozmin = pllozmin
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
pnlozmax = pnlozmin + pnlothic
!=======================================================================================================================
!  PLATE at UPPER CORE
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300))
   plupzmin = pllozmax + asseheig
ENDIF
IFTHEN (typreac == 1600)
   plupzmin = pllozmax + cocaheig
ENDIF
IFTHEN (typreac == 1450)
	plupzmax = pllozmax + vesszmax
ELSE
	plupzmax = plupzmin + plupthic
ENDIF
!=======================================================================================================================
!  NOZZLES + PLATE at UPPER CORE : nozzles are gathered to the upper plate -> equivalent thickness
!=======================================================================================================================
!-----------------------------------------------------------------------------------------------------------------------
! DEFAULT VALUE
!-----------------------------------------------------------------------------------------------------------------------
IF (1-ASSIGNED('noupmass'))  noupmass = zero
!-----------------------------------------------------------------------------------------------------------------------
IFTHEN (typreac <> 1450)
	pnupdhol = plupdhol
	pnupfsho = plupfsho
	pnupthic = plupthic +  4.0D0 * noupmass * SUM(asseweig) / ((barrdint*barrdint)*pi*rhosteel*(one - pnupfsho))
	pnupzmin = plupzmax - pnupthic
	pnupzmax = plupzmax
ELSE
	plupzmax = pllozmax + vesszmax
	pnupzmin = plupzmax
ENDIF
!=======================================================================================================================
!  CHANNEL -> Vessel Radial mesh
!=======================================================================================================================
chandiam  = SR1
chanradi  = SR1
chanrmid  = SR1
channame  = SC1
cumuweig  = 0.0D0
rmidold   = 0.0D0
ridold    = 0.0D0
DO i 1 nchancore
   channame i <- WORD('core'//CHAR(i))
   cumuweig = cumuweig + asseweig:i
   chandiam i <- SQRT( (4.0D0 * assepitc * assepitc * cumuweig) / pi )
   chanradi i <- 0.5D0 * chandiam:i
   chanrmid i <- 0.5D0 * (rmidold + chanradi:i)
ENDDO
IFTHEN (typreac == 1600)
   channame 0 <- 'heavyr'
ENDIF
channame 0 <- 'bypass'
channame 0 <- 'downcome'
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
!=======================================================================================================================
! HR
!=======================================================================================================================
IFTHEN (typreac == 1600)
   hrsurh = (hrnhol * pi * hrdhol * hrdhol / 4.)
   hrsurf = hrsurh * 100. / hrvwpc
   hrdex1 = hrdext - 2. * hrtdex
   hrdint = SQRT(hrdext * hrdext - 4. * hrsurf / pi)
   hrdin1 = hrdint + 2. * hrtdex
   hrsurt = pi*(hrdex1*hrdex1 - hrdin1*hrdin1) / 4.
   hrfsho = hrsurh / hrsurt
   hrzmin = pnlozmax + hrzsla
   hrzmax = hrheig + pllozmax
   hrgami = (barrdint - hrdext) / 2.
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
!=======================================================================================================================
!  Baffle
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   baffdint = chandiam:nchancore
   baffdext = baffdint + 2.0D0 * baffthic
ENDIF
!=======================================================================================================================
!  Barrel
!=======================================================================================================================
!=======================================================================================================================
!  Shield
!=======================================================================================================================
!-----------------------------------------------------------------------------------------------------------------------
! DEFAULT VALUE
!-----------------------------------------------------------------------------------------------------------------------
IF (1-ASSIGNED('shiemass'))  shiemass = zero
!-----------------------------------------------------------------------------------------------------------------------
IFTHEN ((typreac == 900)||(typreac == 1300))
  shiesurf = shiemass / (rhosteel * fuelheig )
  shiedint = barrdext
  shiedext = SQRT( 4.0D0 * shiesurf /pi + shiedint * shiedint )
ENDIF
!=======================================================================================================================
!  Vessel
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
  vessdext = vessdint + 2.0*vessthic
ENDIF
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
IFTHEN (typreac == 1600) 
  vessdext = vessdint + vessthic
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
vesszmin = pnlozmin
IFTHEN (typreac == 1450) 
	vesszmax = pllozmax + vesszmax
ELSE
    vesszmax = pnupzmax
ENDIF
vessmesr = 4
!=======================================================================================================================
!  Insul
!=======================================================================================================================
  insudint = vessdext
IFTHEN (typreac == 1300)
  pllozmax = pnlozmax
ENDIF
!=======================================================================================================================
! BOTTOM NOZZLE
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   bonozmin = pllozmax
   bonomate = 'SSTEEL'
   bonozmax = bonozmin + bonoheig  
   bononame = SC1
   DO i 1 nchancore
      bononame i <- WORD("BONO"//CHAR(i))
   ENDDO
   bonodint = zero
   bonodext = SQRT(bonodint*bonodint+4*bonomass/(pi*rhosteel*bonoheig))
!   bonodext = assedime
!   bonodint = SQRT(bonodext*bonodext-4*bonomass/(pi*rhosteel*bonoheig))
ENDIF
!=======================================================================================================================
!  CLAD properties
!=======================================================================================================================
cladmate = 'Zr'
claddz = (cladheig - (gridz:(gridnz) - gridz:1))   ! difference between cladheigh and extremum grids elevations
IFTHEN (claddz < 0.0D0)
   PRINT "problem: height of clad is smaller than maximum elevation differences for grids"
   STOPEXE
ENDIF
cladzmin = pllozmax + gridz:1 - claddz / 2.0D0
IFTHEN(cladzmin + cladheig > pnupzmin)
   cladzmin = pnupzmin - cladheig
   IFTHEN (cladzmin < pnlozmax)
      PRINT "problem: height of clad is smaller than elevation differences for plates + nozzles"
      STOPEXE
   ENDIF
ENDIF
cladzmax = cladzmin + cladheig
cladname = SC1
DO i 1 nchancore
   cladname i <- WORD("CLAD"//CHAR(i))
ENDDO
!=======================================================================================================================
!  FUEL properties
!=======================================================================================================================
fuelmate = 'O2U'
fueldz   = (cladheig - fuelheig) / 2.0D0
fuelzmin = cladzmin + fueldz
fuelzmax = fuelzmin + fuelheig
fuelname = SC1
fuelweig = SI1
DO i 1 nchancore
   fuelname i <- WORD("FUEL"//CHAR(i))
   fuelweig i <- asseweig:i * assenfue
ENDDO
!=======================================================================================================================
!  tube guide properties
!=======================================================================================================================
gtubdint = tubedint
gtubdext = tubedext
stubdint = tubedint
stubdext = tubedext
tinsdint = tubedint
tinsdext = tubedext
!=======================================================================================================================
!  DEBRIS
!=======================================================================================================================
debrname = SC1
DO i 1 nchancore
   debrname i <- WORD("DEB"//CHAR(i))
ENDDO
!=======================================================================================================================
! Heat Power
!=======================================================================================================================
DO i 1 (SIZE(heatprof)) 2 
   heatprof i <- heatprof:i + fuelzmin
ENDDO
!=======================================================================================================================
!  CONTROL ROD properties
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   !====================================================================================================================
   ! CONTROL ROD
   !====================================================================================================================
     IFTHEN (typreac == 1450)
  	    crodzmin = pllozmax+crodzmin
        crodzmax = pllozmax+crodzmax
	 ELSE
  	    crodzmin = fuelzmin
        crodzmax = fuelzmax
	 ENDIF
      !-----------------------------------------------------------------------------------------------------------------
      ! CONTROL ROD AIC 
      !-----------------------------------------------------------------------------------------------------------------
      crodanam = SC1
      crodawei = SI1
      DO i 1 nchancore
         crodanam i  <- WORD("CRODA"//CHAR(i))
         crodawei i  <- 0
         IF (grpNty == 'AIC') crodawei i <- crodawei:i + grpNweig:i * grpNnc 
         IF (grpGty == 'AIC') crodawei i <- crodawei:i + grpGweig:i * grpGnc
      ENDDO
      !-----------------------------------------------------------------------------------------------------------------
      ! HYBRID CONTROL ROD AIC/B4C
      !-----------------------------------------------------------------------------------------------------------------
      crodbnam = SC1
      crodbwei = SI1
      DO i 1 nchancore
         crodbnam i  <- WORD("CRODB"//CHAR(i))
         crodbwei i  <- 0
         IF (grpNty == 'AICB4C') crodbwei i <- crodbwei:i + grpNweig:i * grpNnc 
         IF (grpGty == 'AICB4C') crodbwei i <- crodbwei:i + grpGweig:i * grpGnc
      ENDDO
      IF ((grpNty == 'AICB4C')||(grpGty == 'AICB4C')) crodzcha = zchange + crodzmin
      !-----------------------------------------------------------------------------------------------------------------
      ! CONTROL ROD HAFNIUM 
      !-----------------------------------------------------------------------------------------------------------------
      crodhnam = SC1
      crodhwei = SI1
      DO i 1 nchancore
         crodhnam i  <- WORD("CRODH"//CHAR(i))
         crodhwei i  <- 0
         crodhwei i <- crodhwei:i + grpHweig:i * grpHnc 
      ENDDO
      !-----------------------------------------------------------------------------------------------------------------
      ! STEEL ROD
      !-----------------------------------------------------------------------------------------------------------------
      srodzmin = fuelzmin
      srodzmax = fuelzmax
      srodname = SC1
      srodweig = SI1
      DO i 1 nchancore
         srodname i <- WORD("CRODS"//CHAR(i))
         srodweig i <- grpNweig:i * grpNns + grpGweig:i * grpGns + grpHweig:i * grpHns
      ENDDO
   !====================================================================================================================
   !  CONTROL ROD GAIN  
   !====================================================================================================================
      IFTHEN (typreac == 1450)     
	    gainzmin = pllozmax+gainzmin
        gainzmax = pllozmax+gainzmax 
	  ELSE
	    gainzmin = cladzmin
        gainzmax = cladzmax 
	  ENDIF
      !-----------------------------------------------------------------------------------------------------------------
      ! GAIN CONTROL ROD AIC 
      !-----------------------------------------------------------------------------------------------------------------
      IFTHEN ((grpNty == 'AIC') || (grpGty == 'AIC')) 
         gainanam = SC1
         DO i 1 nchancore
            gainaname i <- WORD("GAINA"//CHAR(i))
         ENDDO
      ENDIF
      !-----------------------------------------------------------------------------------------------------------------
      ! GAIN HYBRID CONTROL ROD AIC/B4C
      !-----------------------------------------------------------------------------------------------------------------
      IFTHEN ((grpNty == 'AICB4C') || (grpGty == 'AICB4C')) 
         gainbname = SC1
         DO i 1 nchancore
            gainbname i <- WORD("GAINB"//CHAR(i))
         ENDDO
      ENDIF
      !-----------------------------------------------------------------------------------------------------------------
      !  GAIN STEEL CROD
      !-----------------------------------------------------------------------------------------------------------------
      sgaizmin = cladzmin
      sgaizmax = cladzmax
      sgainame = SC1
      DO i 1 nchancore
         sgainame i <- WORD("GAINS"//CHAR(i))
      ENDDO
   !====================================================================================================================
   !  GUIDE TUBE 
   !====================================================================================================================
	  IFTHEN (typreac == 1450)     
	    gtubzmin = pllozmax+gtubzmin
        gtubzmax = pllozmax+gtubzmax
	  ELSE
	    gtubzmin = cladzmin
        gtubzmax = cladzmax
	  ENDIF
      !--------------------------------------------------------------------------------------------------------------------
      ! GUIDE TUBE CONTROL ROD AIC 
      !--------------------------------------------------------------------------------------------------------------------
      IFTHEN ((grpNty == 'AIC') || (grpGty == 'AIC')) 
         gtubanam = SC1
         DO i 1 nchancore
            gtubanam i <- WORD("GTUBA"//CHAR(i))
         ENDDO
      ENDIF
      !--------------------------------------------------------------------------------------------------------------------
      ! GUIDE TUBE HYBRID CONTROL ROD AIC/B4C
      !--------------------------------------------------------------------------------------------------------------------
      IFTHEN ((grpNty == 'AICB4C') || (grpGty == 'AICB4C'))
         gtubbnam = SC1
         DO i 1 nchancore
            gtubbnam i <- WORD("GTUBB"//CHAR(i))
         ENDDO
      ENDIF
      !--------------------------------------------------------------------------------------------------------------------
      ! GUIDE TUBE HAFNIUM
      !--------------------------------------------------------------------------------------------------------------------
      gtubhnam = SC1
      DO i 1 nchancore
         gtubhnam i <- WORD("GTUBH"//CHAR(i))
      ENDDO
      !--------------------------------------------------------------------------------------------------------------------
      ! GUIDE TUBE STEEL ROD
      !--------------------------------------------------------------------------------------------------------------------
      stubname = SC1
      DO i 1 nchancore
         stubname i <- WORD("GTUBS"//CHAR(i))
      ENDDO
ENDIF
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
IFTHEN (typreac == 1600)
 gcrozmin = fuelzmin + difffuel
 gcrozmax = gcrozmin + gcroheig
 gcrozmin = fuelzmin + difffuel
 gcrozmax = gcrozmin + gcroheig
 gcroname = SC1
 gcroweig = SI1
 DO i 1 nchancore
   gcroname i <- WORD("CROD_G"//CHAR(i))
   gcroweig i <- grpGweig:i * grpGnc
 ENDDO
 ! CONTROL ROD properties (for black cluster's AIC/B4C CROD)
 bcrozmin = gcrozmin
 bcrozmax = gcrozmax
 bcroname = SC1
 bcroweig = SI1
 DO i 1 nchancore
   bcroname i <- WORD("CROD_B"//CHAR(i))
   bcroweig i <- grpNweig:i * grpNnc
 ENDDO
 !  CONTROL ROD properties (STEEL CROD)
 srodmate = 'SSTEEL'
 srodzmin = fuelzmin
 srodzmax = fuelzmax
 srodname = SC1
 srodweig = SI1
 DO i 1 nchancore
   srodname i <- WORD("CROD_S"//CHAR(i))
   srodweig i <- grpNweig:i * grpNns + grpGweig:i * grpGns
 ENDDO
 !  GAIN properties (for gray cluster's AIC/B4C CROD)
 ggaimate = 'SSTEEL'
 ggaizmin = cladzmin
 ggaizmax = ggaizmin + ggaiheig
 ggainame = SC1
 DO i 1 nchancore
   ggainame i <- WORD("GAIN_G"//CHAR(i))
 ENDDO
 !  GAIN properties (for black cluster's AIC/B4C CROD)
 bgaimate = 'SSTEEL'
 bgaizmin = ggaizmin
 bgaizmax = ggaizmax
 bgainame = SC1
 DO i 1 nchancore
   bgainame i <- WORD("GAIN_B"//CHAR(i))
 ENDDO
 !  GAIN properties (for STEEL CROD)
 sgaimate = 'SSTEEL'
 sgaizmin = ggaizmin
 sgaizmax = ggaizmax
 sgainame = SC1
 DO i 1 nchancore
   sgainame i <- WORD("GAIN_S"//CHAR(i))
 ENDDO
  !  GUIDE TUBE properties  (for gray cluster's AIC/B4C CROD)
 ggtumate = 'Zr'
 ggtuzmin = cladzmin
 ggtuzmax = cladzmax
 gtubzmin  = ggtuzmin
 gtubzmax  = ggtuzmax
 ggtuname = SC1
 DO i 1 nchancore
    ggtuname i <- WORD("GTUB_G"//CHAR(i))
 ENDDO
 !  GUIDE TUBE properties  (for black cluster's AIC/B4C CROD)
 bgtumate = 'Zr'
 bgtuzmin = ggtuzmin
 bgtuzmax = ggtuzmax
 bgtuname = SC1
 DO i 1 nchancore
    bgtuname i <- WORD("GTUB_B"//CHAR(i))
 ENDDO
!=======================================================================================================================
! GUIDE TUBE properties (for STEEL CROD)
!=======================================================================================================================
  stubmate = 'Zr'
  stubzmin = ggtuzmin
  stubzmax = ggtuzmax
  stubname = SC1
  DO i 1 nchancore
    stubname i <- WORD("GTUB_S"//CHAR(i))
  ENDDO
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
!=======================================================================================================================
!  TUBE INST properties
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   tinsmate = 'Zr'
   IFTHEN (typreac == 1450)
	  tinszmin = gtubzmin
	  tinszmax = gtubzmax
   ELSE  
 	  tinszmin = cladzmin
	  tinszmax = cladzmax  
   ENDIF
   tinsname = SC1
   tinsweig = SI1
   DO i 1 nchancore
      tinsname i <- WORD("TINST"//CHAR(i))
      tinsweig i <- (asseweig:i - grpGweig:i - grpNweig:i)*24 + asseweig:i
   ENDDO
ENDIF
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
IFTHEN (typreac == 1600)
   tinsmate = 'Zr'
   tinszmin = ggtuzmin
   tinszmax = ggtuzmax
   tinsname = SC1
   tinsweig = SI1
   DO i 1 nchancore
      tinsname i <- WORD("TINST"//CHAR(i))
      tinsweig i <- (asseweig:i - grpGweig:i - grpNweig:i)*24 + asseweig:i
   ENDDO
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
!#######################################################################################################################
!#######################################################################################################################
!=======================================================================================================================
!  GRID
!=======================================================================================================================
IFTHEN ((typreac == 900)||(typreac == 1300)||(typreac == 1450))
   gridz = gridz + pllozmax
   gridname = SC1
   DO i 1 nchancore
      DO j 1 gridnz
         gridname ((i-1)*gridnz+j)  <- WORD("GRID"//CHAR(i)//"Z"//CHAR(j))
      ENDDO
   ENDDO
ENDIF
!-----------------------------------------------------------------------------------------------------------------------
!BEGIN- EPR  A VERIFIER ------------------------------------------------------------------------------------------------
IFTHEN (typreac == 1600)
  gridz = gridz + pllozmax
  gridname = SC1
  gridzmax = SR1
  DO i 1 nchancore
    DO j 1 gridnz
      gridname ((i-1)*gridnz+j)  <- WORD("GRI"//CHAR(i)//"_Z"//CHAR(j))
    ENDDO
  ENDDO
  DO j 1 gridnz
     gridzmax j  <- gridz:j + gridheig:j
  ENDDO
ENDIF
!END- EPR A VERIFIER ---------------------------------------------------------------------------------------------------
!-----------------------------------------------------------------------------------------------------------------------
!#######################################################################################################################
!#######################################################################################################################
#end



