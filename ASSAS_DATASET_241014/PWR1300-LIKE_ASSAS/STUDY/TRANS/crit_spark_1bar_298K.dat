!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! limite d'inflammabilite par les recombineurs issue calcul SPARK !
! pour une pression atmospherique 1 bar et temperature 20°C 	  !
! nota : temperature n'a pas d'impact 				  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

STRU EVENT
 STRU ACTI
   #begin INST

IFTHEN(1-ASSIGNED('cont1'))
$ 1er passage : initialisations et repérage des zones contenant des recombineurs

$ - initialisations
  cont1 = BASE : 'CONTAINM' 1
  sequ = BASE : 'SEQUENCE' 1

  numezone = SI1
  ZONERECO = SC1
  S_RECO = STRUCTUR
$DBG='YES'   ! DBG=YES pour exécution pas à pas

$ - repérage des zones contenant des recombineurs
  nzone=0
$     boucle sur les zones
  DO i 1 NUMBER('ZONE',cont1)
    zone = cont1 : 'ZONE' i
    romZ = zone : 'NAME' 1
    IF(romZ == 'EEE' OR romZ =='BAS' OR romZ == 'BAN' OR romZ =='BNV' OR romZ =='BK' OR romZ == 'PTR' OR romZ == 'TMPEASU' OR romZ == 'ENVIRON' OR romZ == 'EXTE' OR romZ =='BANBAS') NEXTCYCL

$     boucle sur les recombineurs 
    DO j 1 NUMBER('CO1D',cont1)
      co1d = cont1 : 'CO1D' j
      romR = co1d : 'FROM' 1
      reco = co1d : 'NAME' 1
            
$     test zone contient un recombineur      
      IFTHEN ( romR == romZ)
        romZisnew=1   ! on initialise en supposant que la zone testée est nouvelle
$       on teste si elle est effectivement nouvelle
        DO iz 1 NUMBER(ZONERECO)
          IFTHEN (romZ == ZONERECO:iz)
            romZisnew=0
            S_RECO('RECO',iz) <- S_RECO : RECO iz //" "// reco
            EXIT ! on sort de la boucle DO
          ENDIF
        ENDDO

        IFTHEN (romZisnew)
          nzone=nzone+1
          numezone(0) <- i
          ZONERECO(0) <- romZ
          S_RECO('RECO',nzone) <- reco//""
        ENDIF
      ENDIF
    ENDDO
  ENDDO
  STOP 0
ENDIF

time = TIME

vzone=0.0   ! volumes des zones ayant franchi la limite d'inflammabilite
vol=0.0     ! %vol des zones ayant franchi la limite d'inflammabilite

$ boucle sur les zones contenant un ou des recombineurs
DO i 1 NUMBER(ZONERECO)
   izone = numezone:i
   zone = cont1 : 'ZONE' izone
   romZ = zone : 'NAME' 1

        IF (NUMBER('THER',zone) == 0 ) NEXTCYCL
        ther = zone : 'THER' 1 
        IF (NUMBER('PRES',ther) == 0 ) NEXTCYCL
	DO k 1 NUMBER ('PART', ther)
	 part = ther : 'PART'  k
	 name = part : 'NAME'
	 IFTHEN ( name == 'GAS' )
	   pres = ther : 'PRES' :0

	   zh2o = part : 'STEAM'
	   Ph2o = zh2o : 'PRES' : 0
	   xh2o = Ph2o / pres
           xh2o=MAX(0.d0,xh2o)  

	   zh2 = part : 'H2' 
	   Ph2 = zh2 : 'PRES' : 0 
	   xh2 = Ph2 / pres
$           xh2=MAX(0.d0,xh2)            
	 ENDIF
        ENDDO

$ critère d'inflammabilite    
        IFTHEN(xh2 > 0.000000001)
	  xh2o = MIN(xh2o,0.574)
	  lim = 1.3958 * xh2o * xh2o + (-27.0627) * xh2o * xh2 + (-25.3345) * xh2 * xh2 + 0.63976 * xh2o + 19.7414 * xh2 - 1.
          IFTHEN(lim >= 0.)
            IF (NUMBER('THER',zone) == 0 ) NEXTCYCL
            ther = zone : 'THER' 1 
            IF (NUMBER('PRES',ther) == 0 ) NEXTCYCL
            DO k 1 NUMBER ('PART', ther)
              part = ther : 'PART'  k
              name = part : 'NAME'
              IFTHEN ( name == 'GAS' )
                vz = part : 'ZFVO':0
                vzone = vzone + vz
              ENDIF
            ENDDO
            WRITE 98 ("    A t = "//CHAR(time)//" : la limite d'inflammabilite SPARK est franchie dans la zone  "//romZ//^
                      " (recombineur(s) "//S_RECO : RECO i//")")
          ENDIF	
        ENDIF	
ENDDO

vol_enc = 0.0
$     calcul du volume enceinte gazeux total
DO i 1 NUMBER('ZONE',cont1)
  zone = cont1 : 'ZONE' i
  romZ = zone : 'NAME' 1
  IF(romZ == 'EEE' OR romZ =='BAS' OR romZ == 'BAN' OR romZ =='BNV' OR romZ =='BK' OR romZ == 'PTR' OR romZ == 'TMPEASU' OR romZ == 'ENVIRON' OR romZ == 'EXTE' OR romZ =='BANBAS' ) NEXTCYCL
  IF (NUMBER('THER',zone) == 0 ) NEXTCYCL
  ther = zone : 'THER' 1 
  DO k 1 NUMBER ('PART', ther)
    part = ther : 'PART'  k
    name = part : 'NAME'
    IFTHEN ( name == 'GAS' )
      IF (NUMBER('ZFVO',part) == 0 ) NEXTCYCL
      volZ = part : 'ZFVO':0
      vol_enc = vol_enc + volZ
    ENDIF
  ENDDO
ENDDO

IF (vol_enc <> 0.0 ) vol = vzone*100./vol_enc
IFTHEN(vzone <> 0.)
  WRITE 98 ("A t = "//CHAR(time)//" : "//CHAR(vol)//^
  " %vol de l'enceinte a franchi la limite SPARK d'inflammabilité par les recombineurs")
ENDIF

  #end    
 END      
END
